<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEngine.UI</name>
    </assembly>
    <member name="T:UnityEngine.EventSystems.AxisEventData">
      <summary>
        <para>Event Data associated with Axis Events (Controller / Keyboard).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.AxisEventData.moveDir">
      <summary>
        <para>[[MoveDirection]] for this event.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.AxisEventData.moveVector">
      <summary>
        <para>Raw input vector associated with this event.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EventSystems.BaseEventData">
      <summary>
        <para>A class that contains the base event data that is common to all event types in the new EventSystem.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.BaseEventData.currentInputModule">
      <summary>
        <para>A reference to the [[BaseInputModule]] that sent this event.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.BaseEventData.selectedObject">
      <summary>
        <para>The object currently considered selected by the [[EventSystem]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.BaseEventData.used">
      <summary>
        <para>Has the event been marked as used?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseEventData.#ctor(UnityEngine.EventSystems.EventSystem)">
      <summary>
        <para>Construct a [[BaseEventData]] tied to the passed [[EventSystem]].</para>
      </summary>
      <param name="eventSystem"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseEventData.Reset">
      <summary>
        <para>Reset the Event to the default state.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseEventData.Use">
      <summary>
        <para>Use the event.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EventSystems.BaseInputModule">
      <summary>
        <para>A base module that raises events and sends them to [[GameObjects]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseInputModule.ActivateModule">
      <summary>
        <para>Called when the module is activated. Override this if you want custom code to execute when you activate your module.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseInputModule.DeactivateModule">
      <summary>
        <para>Called when the module is deactivated. Override this if you want custom code to execute when you deactivate your module.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseInputModule.DetermineMoveDirection(System.Single,System.Single)">
      <summary>
        <para>Given an input movement, determine the best [[MoveDirection]].</para>
      </summary>
      <param name="x">X movement.</param>
      <param name="y">Y movement.</param>
      <param name="deadZone">Dead zone.</param>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseInputModule.DetermineMoveDirection(System.Single,System.Single,System.Single)">
      <summary>
        <para>Given an input movement, determine the best [[MoveDirection]].</para>
      </summary>
      <param name="x">X movement.</param>
      <param name="y">Y movement.</param>
      <param name="deadZone">Dead zone.</param>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseInputModule.FindCommonRoot(UnityEngine.GameObject,UnityEngine.GameObject)">
      <summary>
        <para>Given 2 [[GameObject]]s, return a common root [[GameObject]] (or null).</para>
      </summary>
      <param name="g1"></param>
      <param name="g2"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseInputModule.FindFirstRaycast(System.Collections.Generic.List`1&lt;UnityEngine.EventSystems.RaycastResult&gt;)">
      <summary>
        <para>Return the first valid [[RaycastResult]].</para>
      </summary>
      <param name="candidates"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseInputModule.GetAxisEventData(System.Single,System.Single,System.Single)">
      <summary>
        <para>Given some input data generate an AxisEventData that can be used by the event system.</para>
      </summary>
      <param name="x">X movement.</param>
      <param name="y">Y movement.</param>
      <param name="moveDeadZone">Dead Zone.</param>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseInputModule.GetBaseEventData">
      <summary>
        <para>Generate a BaseEventData that can be used by the EventSystem.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseInputModule.HandlePointerExitAndEnter(UnityEngine.EventSystems.PointerEventData,UnityEngine.GameObject)">
      <summary>
        <para>Handle sending enter and exit events when a new enter targer is found.</para>
      </summary>
      <param name="currentPointerData"></param>
      <param name="newEnterTarget"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseInputModule.IsModuleSupported">
      <summary>
        <para>Check to see if the module is supported. Override this if you have a platfrom specific module (eg. [[TouchInputModule]] that you do not want to activate on standalone.</para>
      </summary>
      <returns>
        <para>Is the module supported.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseInputModule.IsPointerOverGameObject(System.Int32)">
      <summary>
        <para>Is the pointer over a GameObject that is controlled by the EventSystem.</para>
      </summary>
      <param name="pointerId">Pointer id.</param>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseInputModule.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseInputModule.Process">
      <summary>
        <para>Process the current tick for the module.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseInputModule.ShouldActivateModule">
      <summary>
        <para>Should be activated.</para>
      </summary>
      <returns>
        <para>Should the module be activated.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseInputModule.UpdateModule">
      <summary>
        <para>Update the internal state of the Module.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EventSystems.BaseRaycaster">
      <summary>
        <para>Base class for any RayCaster.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.BaseRaycaster.eventCamera">
      <summary>
        <para>The camera that will generate rays for this raycaster.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.BaseRaycaster.priority">
      <summary>
        <para>Priority of the caster relative to other casters.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.BaseRaycaster.renderOrderPriority">
      <summary>
        <para>Priority of the raycaster based upon render order.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.BaseRaycaster.sortOrderPriority">
      <summary>
        <para>Priority of the raycaster based upon sort order.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseRaycaster.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.BaseRaycaster.Raycast(UnityEngine.EventSystems.PointerEventData,System.Collections.Generic.List`1&lt;UnityEngine.EventSystems.RaycastResult&gt;)">
      <summary>
        <para>Raycast against the scene.</para>
      </summary>
      <param name="eventData">Current event data.</param>
      <param name="resultAppendList">List of hit Objects.</param>
    </member>
    <member name="T:UnityEngine.EventSystems.EventHandle">
      <summary>
        <para>Enum that tracks event State.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventHandle.Unused">
      <summary>
        <para>Unused.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventHandle.Used">
      <summary>
        <para>Used.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EventSystems.EventSystem">
      <summary>
        <para>Handles input, raycasting, and sending events.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.EventSystem.alreadySelecting">
      <summary>
        <para>Returns true if the EventSystem is already in a ::ref::SetSelectedGameObject.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.EventSystem.current">
      <summary>
        <para>Return the current EventSystem.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.EventSystem.currentInputModule">
      <summary>
        <para>The currently active [[EventSystems.BaseInputModule]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.EventSystem.currentSelectedGameObject">
      <summary>
        <para>The [[GameObject]] currently considered active by the [[EventSystem]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.EventSystem.firstSelectedGameObject">
      <summary>
        <para>The [[GameObject]] that was selected first.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.EventSystem.pixelDragThreshold">
      <summary>
        <para>The soft area for dragging in pixels.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.EventSystem.sendNavigationEvents">
      <summary>
        <para>Should the EventSystem allow navigation events (move / submit / cancel).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.EventSystem.IsPointerOverGameObject">
      <summary>
        <para>Is the pointer with the given id over an [[EventSystem]] object?</para>
      </summary>
      <param name="pointerId">Pointer (touch / mouse) id.</param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventSystem.IsPointerOverGameObject(System.Int32)">
      <summary>
        <para>Is the pointer with the given id over an [[EventSystem]] object?</para>
      </summary>
      <param name="pointerId">Pointer (touch / mouse) id.</param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventSystem.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.EventSystem.RaycastAll(UnityEngine.EventSystems.PointerEventData,System.Collections.Generic.List`1&lt;UnityEngine.EventSystems.RaycastResult&gt;)">
      <summary>
        <para>Raycast into the scene using all configured [[BaseRaycaster]]s.</para>
      </summary>
      <param name="eventData">Current pointer data.</param>
      <param name="raycastResults">List of 'hits' to populate.</param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventSystem.SetSelectedGameObject(UnityEngine.GameObject,UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>Set the object as selected. Will send an OnDeselect the the old selected object and OnSelect to the new selected object.</para>
      </summary>
      <param name="selected">GameObject to select.</param>
      <param name="pointer">Associated EventData.</param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventSystem.UpdateModules">
      <summary>
        <para>Recalculate the internal list of [[BaseInputModules]].</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EventSystems.EventTrigger">
      <summary>
        <para>Receives events from the EventSystem and calls registered functions for each event.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTrigger.delegates">
      <summary>
        <para>All the functions registered in this EventTrigger.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.EventTrigger.triggers">
      <summary>
        <para>All the functions registered in this EventTrigger.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EventSystems.EventTrigger.Entry">
      <summary>
        <para>An Entry in the EventSystem delegates list.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTrigger.Entry.callback">
      <summary>
        <para>The desired [[UnityEvent]] to be Invoked.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTrigger.Entry.eventID">
      <summary>
        <para>What type of event is the associated callback listening for.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.EventTrigger.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>See [[IBeginDragHandler.OnBeginDrag]].</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventTrigger.OnCancel(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>See [[ICancelHandler.OnCancel]].</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventTrigger.OnDeselect(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>See [[IDeselectHandler.OnDeselect]].</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventTrigger.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>See [[IDragHandler.OnDrag]].</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventTrigger.OnDrop(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>See [[IDropHandler.OnDrop]].</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventTrigger.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>See See [[IBeginDragHandler.OnEndDrag]].</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventTrigger.OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Called by a [[BaseInputModule]] when a drag has been found but before it is valid to begin the drag.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventTrigger.OnMove(UnityEngine.EventSystems.AxisEventData)">
      <summary>
        <para>See [[IMoveHandler.OnMove]].</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventTrigger.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>See [[IPointerClickHandler.OnPointerClick]].</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventTrigger.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>See [[IPointerDownHandler.OnPointerDown]].</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventTrigger.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>See [[IPointerEnterHandler.OnPointerEnter]].</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventTrigger.OnPointerExit(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>See [[IPointerExitHandler.OnPointerExit]].</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventTrigger.OnPointerUp(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>See [[IPointerUpHandler.OnPointerUp]].</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventTrigger.OnScroll(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>See [[IScrollHandler.OnScroll]].</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventTrigger.OnSelect(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>See [[ISelectHandler.OnSelect]].</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventTrigger.OnSubmit(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>See [[ISubmitHandler.OnSubmit]].</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.EventTrigger.OnUpdateSelected(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>See [[IUpdateSelectedHandler.OnUpdateSelected]].</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="T:UnityEngine.EventSystems.EventTrigger.TriggerEvent">
      <summary>
        <para>UnityEvent class for Triggers.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EventSystems.EventTriggerType">
      <summary>
        <para>The type of event the [[TriggerEvent]] is intercepting.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTriggerType.BeginDrag">
      <summary>
        <para>Intercepts [[IBeginDragHandler.OnBeginDrag]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTriggerType.Cancel">
      <summary>
        <para>Intercepts [[ICancelHandler.OnCancel]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTriggerType.Deselect">
      <summary>
        <para>Intercepts a [[IDeselectHandler.OnDeselect]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTriggerType.Drag">
      <summary>
        <para>Intercepts a [[IDragHandler.OnDrag]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTriggerType.Drop">
      <summary>
        <para>Intercepts a [[IDropHandler.OnDrop]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTriggerType.EndDrag">
      <summary>
        <para>Intercepts [[IEndDragHandler.OnEndDrag]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTriggerType.InitializePotentialDrag">
      <summary>
        <para>Intercepts [[IInitializePotentialDrag.InitializePotentialDrag]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTriggerType.Move">
      <summary>
        <para>Intercepts a [[IMoveHandler.OnMove]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTriggerType.PointerClick">
      <summary>
        <para>Intercepts a [[IPointerClickHandler.OnPointerClick]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTriggerType.PointerDown">
      <summary>
        <para>Intercepts a [[IPointerDownHandler.OnPointerDown]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTriggerType.PointerEnter">
      <summary>
        <para>Intercepts a [[IPointerEnterHandler.OnPointerEnter]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTriggerType.PointerExit">
      <summary>
        <para>Intercepts a [[IPointerExitHandler.OnPointerExit]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTriggerType.PointerUp">
      <summary>
        <para>Intercepts a [[IPointerUpHandler.OnPointerUp]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTriggerType.Scroll">
      <summary>
        <para>Intercepts a [[IScrollHandler.OnScroll]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTriggerType.Select">
      <summary>
        <para>Intercepts a [[ISelectHandler.OnSelect]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTriggerType.Submit">
      <summary>
        <para>Intercepts [[ISubmitHandler.Submit]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.EventTriggerType.UpdateSelected">
      <summary>
        <para>Intercepts a [[IUpdateSelectedHandler.OnUpdateSelected]].</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EventSystems.ExecuteEvents">
      <summary>
        <para>Helper class that can be used to send [[IEventSystemHandler]] events to GameObjects.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.ExecuteEvents.beginDragHandler">
      <summary>
        <para>[[IBeginDragHandler]] execute helper function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.ExecuteEvents.cancelHandler">
      <summary>
        <para>[[ICancelHandler]] execute helper function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.ExecuteEvents.deselectHandler">
      <summary>
        <para>[[IDeselectHandler]] execute helper function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.ExecuteEvents.dragHandler">
      <summary>
        <para>[[IDragHandler]] execute helper function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.ExecuteEvents.dropHandler">
      <summary>
        <para>[[IDropHandler]] execute helper function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.ExecuteEvents.endDragHandler">
      <summary>
        <para>[[IEndDragHandler]] execute helper function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.ExecuteEvents.initializePotentialDrag">
      <summary>
        <para>[[IInitializePotentialDragHandler]] execute helper function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.ExecuteEvents.moveHandler">
      <summary>
        <para>[[IMoveHandler]] execute helper function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.ExecuteEvents.pointerClickHandler">
      <summary>
        <para>[[IPointerClickHandler]] execute helper function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.ExecuteEvents.pointerDownHandler">
      <summary>
        <para>[[IPointerDownHandler]] execute helper function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.ExecuteEvents.pointerEnterHandler">
      <summary>
        <para>[[IPointerEnterHandler]] execute helper function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.ExecuteEvents.pointerExitHandler">
      <summary>
        <para>[[IPointerExitHandler]] execute helper function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.ExecuteEvents.pointerUpHandler">
      <summary>
        <para>[[IPointerUpHandler]] execute helper function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.ExecuteEvents.scrollHandler">
      <summary>
        <para>[[IScrollHandler]] execute helper function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.ExecuteEvents.selectHandler">
      <summary>
        <para>[[ISelectHandler]] execute helper function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.ExecuteEvents.submitHandler">
      <summary>
        <para>[[ISubmitHandler]] execute helper function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.ExecuteEvents.updateSelectedHandler">
      <summary>
        <para>[[IUpdateSelectedHandler]] execute helper function.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.ExecuteEvents.CanHandleEvent(UnityEngine.GameObject)">
      <summary>
        <para>Can the given [[GameObject]] handle the [[IEventSystemHandler]] of type T.</para>
      </summary>
      <param name="go">GameObject.</param>
      <returns>
        <para>Can Handle.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.EventSystems.ExecuteEvents.EventFunction_1">
      <summary>
        <para>Funtion definition for an EventFunction that is used to map a given EventInterface into a specific event call.</para>
      </summary>
      <param name="handler"></param>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.ExecuteEvents.Execute(UnityEngine.GameObject,UnityEngine.EventSystems.BaseEventData,UnityEngine.EventSystems.ExecuteEvents/EventFunction`1&lt;T&gt;)">
      <summary>
        <para>Execute the event of type T : [[IEventSystemHandler]] on  [[GameObject]].</para>
      </summary>
      <param name="target">Target [[GameObject]].</param>
      <param name="eventData">Data associated with the Executing event.</param>
      <param name="functor">Function to execute on the gameObject components.</param>
      <returns>
        <para>Was there a handler for the event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.EventSystems.ExecuteEvents.ExecuteHierarchy(UnityEngine.GameObject,UnityEngine.EventSystems.BaseEventData,UnityEngine.EventSystems.ExecuteEvents/EventFunction`1&lt;T&gt;)">
      <summary>
        <para>Recurse up the hierarchy calling ::ref::Execute&lt;T&gt; until there is a GameObject that can handle the event.</para>
      </summary>
      <param name="root">Start [[GameObject]].</param>
      <param name="eventData">Data associated with the Executing event.</param>
      <param name="callbackFunction">Function to execute on the gameObject components.</param>
      <returns>
        <para>GameObject that handled the event.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.EventSystems.ExecuteEvents.GetEventHandler(UnityEngine.GameObject)">
      <summary>
        <para>Starting the hierarchy (starting at root) for a [[GameObject]] that can handle &lt;T&gt;</para>
      </summary>
      <param name="root">Root [[GameObject]].</param>
      <returns>
        <para>Handling [[GameObject]].</para>
      </returns>
    </member>
    <member name="M:UnityEngine.EventSystems.ExecuteEvents.ValidateEventData(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>Attempt to convert the data to type T. If conversion fails an ArgumentException is thrown.</para>
      </summary>
      <param name="data">Data to validate.</param>
      <returns>
        <para>Data as T.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.EventSystems.IBeginDragHandler">
      <summary>
        <para>Interface to implement if you wish to receive ::ref::OnBeginDrag callbacks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.IBeginDragHandler.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Called by a [[BaseInputModule]] before a drag is started.</para>
      </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="?:UnityEngine.EventSystems.ICancelHandler">
      <summary>
        <para>Interface to implement if you wish to receive ::ref::OnCancel callbacks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.ICancelHandler.OnCancel(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>Called by a [[BaseInputModule]] when a Cancel event occurs.</para>
      </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="?:UnityEngine.EventSystems.IDeselectHandler">
      <summary>
        <para>Interface to implement if you wish to receive ::ref::OnDeselect callbacks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.IDeselectHandler.OnDeselect(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>Called by the [[EventSystem]] when a new object is being selected.</para>
      </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="?:UnityEngine.EventSystems.IDragHandler">
      <summary>
        <para>Interface to implement if you wish to receive ::ref::OnDrag callbacks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.IDragHandler.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>When draging is occuring this will be called every time the cursor is moved.</para>
      </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="?:UnityEngine.EventSystems.IDropHandler">
      <summary>
        <para>Interface to implement if you wish to receive ::ref::OnDrop callbacks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.IDropHandler.OnDrop(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Called by a [[BaseInputModule]] on a target that can accept a drop.</para>
      </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="?:UnityEngine.EventSystems.IEndDragHandler">
      <summary>
        <para>Interface to implement if you wish to receive ::ref::OnEndDrag callbacks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.IEndDragHandler.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Called by a [[BaseInputModule]] when a drag is ended.</para>
      </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="?:UnityEngine.EventSystems.IEventSystemHandler">
      <summary>
        <para>Base class that all [[EventSystem]] events inherit from.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.EventSystems.IInitializePotentialDragHandler">
      <summary>
        <para>Interface to implement if you wish to receive ::ref::OnInitializePotentialDrag callbacks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.IInitializePotentialDragHandler.OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Called by a [[BaseInputModule]] when a drag has been found but before it is valid to begin the drag.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="?:UnityEngine.EventSystems.IMoveHandler">
      <summary>
        <para>Interface to implement if you wish to receive ::ref::OnMove callbacks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.IMoveHandler.OnMove(UnityEngine.EventSystems.AxisEventData)">
      <summary>
        <para>Called by a [[BaseInputModule]] when a move event occurs.</para>
      </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="?:UnityEngine.EventSystems.IPointerClickHandler">
      <summary>
        <para>Interface to implement if you wish to receive ::ref::OnPointerClick callbacks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para></para>
      </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="?:UnityEngine.EventSystems.IPointerDownHandler">
      <summary>
        <para>Interface to implement if you wish to receive ::ref::OnPointerDown callbacks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para></para>
      </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="?:UnityEngine.EventSystems.IPointerEnterHandler">
      <summary>
        <para>Interface to implement if you wish to receive ::ref::OnPointerEnter callbacks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para></para>
      </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="?:UnityEngine.EventSystems.IPointerExitHandler">
      <summary>
        <para>Interface to implement if you wish to receive ::ref::OnPointerExit callbacks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para></para>
      </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="?:UnityEngine.EventSystems.IPointerUpHandler">
      <summary>
        <para>Interface to implement if you wish to receive ::ref::OnPointerUp callbacks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para></para>
      </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="?:UnityEngine.EventSystems.IScrollHandler">
      <summary>
        <para>Interface to implement if you wish to receive ::ref::OnScroll callbacks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.IScrollHandler.OnScroll(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para></para>
      </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="?:UnityEngine.EventSystems.ISelectHandler">
      <summary>
        <para>Interface to implement if you wish to receive ::ref::OnSelect callbacks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.ISelectHandler.OnSelect(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para></para>
      </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="?:UnityEngine.EventSystems.ISubmitHandler">
      <summary>
        <para>Interface to implement if you wish to receive ::ref::OnSubmit callbacks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.ISubmitHandler.OnSubmit(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para></para>
      </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="?:UnityEngine.EventSystems.IUpdateSelectedHandler">
      <summary>
        <para>Interface to implement if you wish to receive ::ref::OnUpdateSelected callbacks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.IUpdateSelectedHandler.OnUpdateSelected(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para></para>
      </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="T:UnityEngine.EventSystems.MoveDirection">
      <summary>
        <para>8 direction movement enum.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.MoveDirection.Down">
      <summary>
        <para>Down.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.MoveDirection.Left">
      <summary>
        <para>Left.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.MoveDirection.None">
      <summary>
        <para>None.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.MoveDirection.Right">
      <summary>
        <para>Right.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.MoveDirection.Up">
      <summary>
        <para>Up.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EventSystems.Physics2DRaycaster">
      <summary>
        <para>Raycaster for casting against 2D Physics components.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.Physics2DRaycaster.Raycast(UnityEngine.EventSystems.PointerEventData,System.Collections.Generic.List`1&lt;UnityEngine.EventSystems.RaycastResult&gt;)">
      <summary>
        <para>See: [[BaseRaycaster]].</para>
      </summary>
      <param name="eventData"></param>
      <param name="resultAppendList"></param>
    </member>
    <member name="T:UnityEngine.EventSystems.PhysicsRaycaster">
      <summary>
        <para>Raycaster for casting against 3D Physics components.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PhysicsRaycaster.depth">
      <summary>
        <para>Get the depth of the configured camera.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PhysicsRaycaster.eventCamera">
      <summary>
        <para>Get the camera that is used for this module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PhysicsRaycaster.eventMask">
      <summary>
        <para>Mask of allowed raycast events.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PhysicsRaycaster.finalEventMask">
      <summary>
        <para>Logical and of [[Camera]] mask and ::ref::eventMask.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.PhysicsRaycaster.Raycast(UnityEngine.EventSystems.PointerEventData,System.Collections.Generic.List`1&lt;UnityEngine.EventSystems.RaycastResult&gt;)">
      <summary>
        <para>See: [[BaseRaycaster]].</para>
      </summary>
      <param name="eventData"></param>
      <param name="resultAppendList"></param>
    </member>
    <member name="T:UnityEngine.EventSystems.PointerEventData">
      <summary>
        <para>Event payload associated with pointer (mouse / touch) events.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PointerEventData.button">
      <summary>
        <para>The [[EventSystems.PointerEventData.InputButton]] for this event.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PointerEventData.clickCount">
      <summary>
        <para>Number of clicks in a row.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PointerEventData.clickTime">
      <summary>
        <para>The last time a click event was sent.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PointerEventData.delta">
      <summary>
        <para>Pointer delta since last update.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PointerEventData.dragging">
      <summary>
        <para>Is a drag operation currently occuring.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PointerEventData.enterEventCamera">
      <summary>
        <para>The camera associated with the last OnPointerEnter event.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.PointerEventData.hovered">
      <summary>
        <para>List of objects in the hover stack.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PointerEventData.lastPress">
      <summary>
        <para>The [[GameObject]] for the last press event.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PointerEventData.pointerCurrentRaycast">
      <summary>
        <para>[[RaycastResult]] associated with the current event.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PointerEventData.pointerDrag">
      <summary>
        <para>The object that is receiving 'OnDrag'.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PointerEventData.pointerEnter">
      <summary>
        <para>The object that received 'OnPointerEnter'.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PointerEventData.pointerId">
      <summary>
        <para>Id of the pointer (touch id).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PointerEventData.pointerPress">
      <summary>
        <para>The [[GameObject]] that received the OnPointerDown.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PointerEventData.pointerPressRaycast">
      <summary>
        <para>[[RaycastResult]] associated with the pointer press.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PointerEventData.position">
      <summary>
        <para>Current pointer position.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PointerEventData.pressEventCamera">
      <summary>
        <para>The camera associated with the last OnPointerPress event.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PointerEventData.pressPosition">
      <summary>
        <para>Position of the press.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PointerEventData.rawPointerPress">
      <summary>
        <para>The object that the press happened on even if it can not handle the press event.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PointerEventData.scrollDelta">
      <summary>
        <para>The amount of scroll since the last update.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.PointerEventData.useDragThreshold">
      <summary>
        <para>Should a drag threshold be used?</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EventSystems.PointerEventData.FramePressState">
      <summary>
        <para>The state of a press for the given frame.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.PointerEventData.FramePressState.NotChanged">
      <summary>
        <para>Same as last frame.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.PointerEventData.FramePressState.Pressed">
      <summary>
        <para>Button was pressed this frame.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.PointerEventData.FramePressState.PressedAndReleased">
      <summary>
        <para>Button was pressed and released this frame.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.PointerEventData.FramePressState.Released">
      <summary>
        <para>Button was released this frame.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EventSystems.PointerEventData.InputButton">
      <summary>
        <para>Input press tracking.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.PointerEventData.InputButton.Left">
      <summary>
        <para>Left button.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.PointerEventData.InputButton.Middle">
      <summary>
        <para>Middle button.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.PointerEventData.InputButton.Right">
      <summary>
        <para>Right button.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.PointerEventData.IsPointerMoving">
      <summary>
        <para>Is the pointer moving.</para>
      </summary>
      <returns>
        <para>Moving.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.EventSystems.PointerEventData.IsScrolling">
      <summary>
        <para>Is scroll being used on the input device.</para>
      </summary>
      <returns>
        <para>Scrolling.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.EventSystems.PointerInputModule">
      <summary>
        <para>A [[BaseInputModule]] for pointer input.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.PointerInputModule.kFakeTouchesId">
      <summary>
        <para>Touch id for when simulating touches on a non touch device.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.PointerInputModule.kMouseLeftId">
      <summary>
        <para>Id of the cached left mouse pointer event.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.PointerInputModule.kMouseMiddleId">
      <summary>
        <para>Id of the cached middle mouse pointer event.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.PointerInputModule.kMouseRightId">
      <summary>
        <para>Id of the cached right mouse pointer event.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.PointerInputModule.ClearSelection">
      <summary>
        <para>Clear all pointers and deselect any selected objects in the [[EventSystem]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.PointerInputModule.CopyFromTo(UnityEngine.EventSystems.PointerEventData,UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Copy one [[PointerEventData]] to another.</para>
      </summary>
      <param name="from"></param>
      <param name="to"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.PointerInputModule.DeselectIfSelectionChanged(UnityEngine.GameObject,UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>Deselect the current selected GameObject if the currently pointed-at GameObject is different.</para>
      </summary>
      <param name="currentOverGo">The [[GameObject]] the pointer is currently over.</param>
      <param name="pointerEvent">Current event data.</param>
    </member>
    <member name="M:UnityEngine.EventSystems.PointerInputModule.GetLastPointerEventData(System.Int32)">
      <summary>
        <para>Return the last [[PointerEventData]] for the given touch / mouse id.</para>
      </summary>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.PointerInputModule.GetMousePointerEventData">
      <summary>
        <para>Return the current [[MouseState]].</para>
      </summary>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.PointerInputModule.GetMousePointerEventData(System.Int32)">
      <summary>
        <para>Return the current [[MouseState]].</para>
      </summary>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.PointerInputModule.GetPointerData(System.Int32,UnityEngine.EventSystems.PointerEventData&amp;,System.Boolean)">
      <summary>
        <para>Seach the cache for currently active pointers, return true if found.</para>
      </summary>
      <param name="id">Touch ID.</param>
      <param name="data">Found data.</param>
      <param name="create">If not found should it be created.</param>
      <returns>
        <para>True if a pointer is found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.EventSystems.PointerInputModule.GetTouchPointerEventData(UnityEngine.Touch,System.Boolean&amp;,System.Boolean&amp;)">
      <summary>
        <para>Given a touch populate the [[PointerEventData]] and return if we are pressed or released.</para>
      </summary>
      <param name="input">Processing Touch.</param>
      <param name="pressed">Are we pressed.</param>
      <param name="released">Are we released.</param>
    </member>
    <member name="T:UnityEngine.EventSystems.PointerInputModule.MouseButtonEventData">
      <summary>
        <para>Information about a mouse button event.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.PointerInputModule.MouseButtonEventData.buttonData">
      <summary>
        <para>Pointer data associated with the mouse event.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.PointerInputModule.MouseButtonEventData.buttonState">
      <summary>
        <para>The state of the button this frame.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.PointerInputModule.MouseButtonEventData.PressedThisFrame">
      <summary>
        <para>Was the button pressed this frame?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.PointerInputModule.MouseButtonEventData.ReleasedThisFrame">
      <summary>
        <para>Was the button released this frame?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.PointerInputModule.ProcessDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Process the drag for the current frame with the given pointer event.</para>
      </summary>
      <param name="pointerEvent"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.PointerInputModule.ProcessMove(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Process movement for the current frame with the given pointer event.</para>
      </summary>
      <param name="pointerEvent"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.PointerInputModule.RemovePointerData(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Remove the [[PointerEventData]] from the cache.</para>
      </summary>
      <param name="data"></param>
    </member>
    <member name="M:UnityEngine.EventSystems.PointerInputModule.StateForMouseButton(System.Int32)">
      <summary>
        <para>Given a mouse button return the current state for the frame.</para>
      </summary>
      <param name="buttonId">Mouse Button id.</param>
    </member>
    <member name="T:UnityEngine.EventSystems.RaycastResult">
      <summary>
        <para>A hit result from a [[BaseRaycastModule]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.RaycastResult.depth">
      <summary>
        <para>The relative depth of the element.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.RaycastResult.distance">
      <summary>
        <para>Distance to the hit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.RaycastResult.gameObject">
      <summary>
        <para>The [[GameObject]] that was hit by the raycast.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.RaycastResult.index">
      <summary>
        <para>Hit index.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.RaycastResult.isValid">
      <summary>
        <para>Is there an associated module and a hit [[GameObject]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.RaycastResult.module">
      <summary>
        <para>[[BaseInputModule]] that raised the hit.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.RaycastResult.screenPosition">
      <summary>
        <para>The screen position from which the raycast was generated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.RaycastResult.sortingLayer">
      <summary>
        <para>The SortingLayer of the hit object.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.RaycastResult.sortingOrder">
      <summary>
        <para>The SortingOrder for the hit object.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.RaycastResult.worldNormal">
      <summary>
        <para>The normal at the hit location of the raycast.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventSystems.RaycastResult.worldPosition">
      <summary>
        <para>The world position of the where the raycast has hit.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.RaycastResult.Clear">
      <summary>
        <para>Reset the result.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EventSystems.StandaloneInputModule">
      <summary>
        <para>A [[BaseInputModule]] designed for mouse / keyboard / controller input.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.StandaloneInputModule.allowActivationOnMobileDevice">
      <summary>
        <para>Is this module allowed to be activated if you are on mobile.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.StandaloneInputModule.cancelButton">
      <summary>
        <para>Input manager name for the 'cancel' button.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.StandaloneInputModule.forceModuleActive">
      <summary>
        <para>Force this module to be active.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.StandaloneInputModule.horizontalAxis">
      <summary>
        <para>Input manager name for the horizontal axis button.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.StandaloneInputModule.inputActionsPerSecond">
      <summary>
        <para>Number of keyboard / controller inputs allowed per second.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.StandaloneInputModule.repeatDelay">
      <summary>
        <para>Delay in seconds before the input actions per second repeat rate takes effect.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.StandaloneInputModule.submitButton">
      <summary>
        <para>Maximum number of input events handled per second.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.StandaloneInputModule.verticalAxis">
      <summary>
        <para>Input manager name for the vertical axis.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.StandaloneInputModule.ActivateModule">
      <summary>
        <para>See [[BaseInputModule]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.StandaloneInputModule.DeactivateModule">
      <summary>
        <para>See [[BaseInputModule]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.StandaloneInputModule.IsModuleSupported">
      <summary>
        <para>See [[BaseInputModule]].</para>
      </summary>
      <returns>
        <para>Supported.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.EventSystems.StandaloneInputModule.Process">
      <summary>
        <para>See [[BaseInputModule]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.StandaloneInputModule.ProcessMouseEvent">
      <summary>
        <para>Iterate through all the different mouse events.</para>
      </summary>
      <param name="id">The mouse pointer Event data id to get.</param>
    </member>
    <member name="M:UnityEngine.EventSystems.StandaloneInputModule.ProcessMouseEvent(System.Int32)">
      <summary>
        <para>Iterate through all the different mouse events.</para>
      </summary>
      <param name="id">The mouse pointer Event data id to get.</param>
    </member>
    <member name="M:UnityEngine.EventSystems.StandaloneInputModule.ProcessMousePress(UnityEngine.EventSystems.PointerInputModule/MouseButtonEventData)">
      <summary>
        <para>Calulate and process any mouse button state changes.</para>
      </summary>
      <param name="data">The data pertaining to the current mouse state.</param>
    </member>
    <member name="M:UnityEngine.EventSystems.StandaloneInputModule.SendMoveEventToSelectedObject">
      <summary>
        <para>Calculate and send a move event to the current selected object.</para>
      </summary>
      <returns>
        <para>If the move event was used by the selected object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.EventSystems.StandaloneInputModule.SendSubmitEventToSelectedObject">
      <summary>
        <para>Calculate and send a submit event to the current selected object.</para>
      </summary>
      <returns>
        <para>If the submit event was used by the selected object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.EventSystems.StandaloneInputModule.SendUpdateEventToSelectedObject">
      <summary>
        <para>Send a update event to the currently selected object.</para>
      </summary>
      <returns>
        <para>If the update event was used by the selected object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.EventSystems.StandaloneInputModule.ShouldActivateModule">
      <summary>
        <para>See [[BaseInputModule]].</para>
      </summary>
      <returns>
        <para>Should activate.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.EventSystems.StandaloneInputModule.UpdateModule">
      <summary>
        <para>See [[BaseInputModule]].</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EventSystems.TouchInputModule">
      <summary>
        <para>Input module used for touch based input.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.TouchInputModule.allowActivationOnStandalone">
      <summary>
        <para>Can this module be activated on a standalone platform?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EventSystems.TouchInputModule.forceModuleActive">
      <summary>
        <para>Force this module to be active.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.TouchInputModule.DeactivateModule">
      <summary>
        <para>See [[BaseInputModule]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.TouchInputModule.IsModuleSupported">
      <summary>
        <para>See [[BaseInputModule]].</para>
      </summary>
      <returns>
        <para>Supported.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.EventSystems.TouchInputModule.Process">
      <summary>
        <para>See [[BaseInputModule]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.TouchInputModule.ShouldActivateModule">
      <summary>
        <para>See [[BaseInputModule]].</para>
      </summary>
      <returns>
        <para>Should activate.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.EventSystems.TouchInputModule.UpdateModule">
      <summary>
        <para>See [[BaseInputModule]].</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EventSystems.UIBehaviour">
      <summary>
        <para>Base behaviour that has protected implementations of Unity lifecycle functions.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.UIBehaviour.Awake">
      <summary>
        <para>See [[MonoBehaviour.Awake]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.UIBehaviour.IsActive">
      <summary>
        <para>Returns true if the [[GameObject]] and the [[Component]] are active.</para>
      </summary>
      <returns>
        <para>Active.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.EventSystems.UIBehaviour.IsDestroyed">
      <summary>
        <para>Returns true if the native representation of the behaviour has been destroyed.</para>
      </summary>
      <returns>
        <para>True if Destroyed.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.EventSystems.UIBehaviour.OnBeforeTransformParentChanged">
      <summary>
        <para>See [[MonoBehaviour.OnBeforeTransformParentChanged]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.UIBehaviour.OnCanvasGroupChanged">
      <summary>
        <para>See [[MonoBehaviour.OnCanvasGroupChanged]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.UIBehaviour.OnCanvasHierarchyChanged">
      <summary>
        <para>Called when the state of the parent Canvas is changed.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.UIBehaviour.OnDestroy">
      <summary>
        <para>See [[MonoBehaviour.OnDestroy]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.UIBehaviour.OnDidApplyAnimationProperties">
      <summary>
        <para>See [[MonoBehaviour.OnDidApplyAnimationProperties]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.UIBehaviour.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.UIBehaviour.OnEnable">
      <summary>
        <para>See [[MonoBehaviour.OnEnable]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.UIBehaviour.OnRectTransformDimensionsChange">
      <summary>
        <para>See [[MonoBehaviour.OnRectTransformDimensionsChange]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.UIBehaviour.OnTransformParentChanged">
      <summary>
        <para>See [[MonoBehaviour.OnRectTransformParentChanged]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.UIBehaviour.OnValidate">
      <summary>
        <para>See [[MonoBehaviour.OnValidate]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.UIBehaviour.Reset">
      <summary>
        <para>See [[MonoBehaviour.Reset]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EventSystems.UIBehaviour.Start">
      <summary>
        <para>See [[MonoBehaviour.Start]].</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.AnimationTriggers">
      <summary>
        <para>Structure to store the state of an animation transition on a [[Selectable]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.AnimationTriggers.disabledTrigger">
      <summary>
        <para>Trigger to send to animator when entering disabled state.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.AnimationTriggers.highlightedTrigger">
      <summary>
        <para>Trigger to send to animator when entering highlighted state.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.AnimationTriggers.normalTrigger">
      <summary>
        <para>Trigger to send to animator when entering normal state.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.AnimationTriggers.pressedTrigger">
      <summary>
        <para>Trigger to send to animator when entering pressed state.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.AspectRatioFitter">
      <summary>
        <para>Resizes a RectTransform to fit a specified aspect ratio.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.AspectRatioFitter.aspectMode">
      <summary>
        <para>The mode to use to enforce the aspect ratio.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.AspectRatioFitter.aspectRatio">
      <summary>
        <para>The aspect ratio to enforce. This means width divided by height.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.AspectRatioFitter.AspectMode">
      <summary>
        <para>Specifies a mode to use to enforce an aspect ratio.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.AspectRatioFitter.AspectMode.EnvelopeParent">
      <summary>
        <para>Sizes the rectangle such that the parent rectangle is fully contained within.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.AspectRatioFitter.AspectMode.FitInParent">
      <summary>
        <para>Sizes the rectangle such that it's fully contained within the parent rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.AspectRatioFitter.AspectMode.HeightControlsWidth">
      <summary>
        <para>Changes the width of the rectangle to match the aspect ratio.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.AspectRatioFitter.AspectMode.None">
      <summary>
        <para>The aspect ratio is not enforced.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.AspectRatioFitter.AspectMode.WidthControlsHeight">
      <summary>
        <para>Changes the height of the rectangle to match the aspect ratio.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.AspectRatioFitter.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.AspectRatioFitter.SetDirty">
      <summary>
        <para>Mark the AspectRatioFitter as dirty.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.AspectRatioFitter.SetLayoutHorizontal">
      <summary>
        <para>Method called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.AspectRatioFitter.SetLayoutVertical">
      <summary>
        <para>Method called by the layout system.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.BaseMeshEffect">
      <summary>
        <para>Base class for effects that modify the generated Mesh.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.BaseMeshEffect.ModifyMesh(UnityEngine.Mesh)">
      <summary>
        <para>See:[[IMeshModifier]].</para>
      </summary>
      <param name="mesh"></param>
    </member>
    <member name="M:UnityEngine.UI.BaseMeshEffect.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.BaseVertexEffect">
      <summary>
        <para>Base class for effects that modify the the generated Vertex Buffers.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.BaseVertexEffect.ModifyVertices(System.Collections.Generic.List`1&lt;UnityEngine.UIVertex&gt;)">
      <summary>
        <para>See:[[IVertexModifier]].</para>
      </summary>
      <param name="vertices"></param>
    </member>
    <member name="T:UnityEngine.UI.Button">
      <summary>
        <para>A standard button that can be clicked in order to trigger an event.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Button.onClick">
      <summary>
        <para>UnityEvent to be fired when the buttons is pressed.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.Button.ButtonClickedEvent">
      <summary>
        <para>Function definition for a button click event.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Button.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Registered IPointerClickHandler callback.</para>
      </summary>
      <param name="eventData">Data passed in (Typically by the event system).</param>
    </member>
    <member name="M:UnityEngine.UI.Button.OnSubmit(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>Registered ISubmitHandler callback.</para>
      </summary>
      <param name="eventData">Data passed in (Typically by the event system).</param>
    </member>
    <member name="T:UnityEngine.UI.CanvasScaler">
      <summary>
        <para>The Canvas Scaler component is used for controlling the overall scale and pixel density of UI elements in the Canvas. This scaling affects everything under the Canvas, including font sizes and image borders.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.CanvasScaler.defaultSpriteDPI">
      <summary>
        <para>The pixels per inch to use for sprites that have a 'Pixels Per Unit' setting that matches the 'Reference Pixels Per Unit' setting.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.CanvasScaler.dynamicPixelsPerUnit">
      <summary>
        <para>The amount of pixels per unit to use for dynamically created bitmaps in the UI, such as Text.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.CanvasScaler.fallbackScreenDPI">
      <summary>
        <para>The DPI to assume if the screen DPI is not known.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.CanvasScaler.matchWidthOrHeight">
      <summary>
        <para>Setting to scale the Canvas to match the width or height of the reference resolution, or a combination.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.CanvasScaler.physicalUnit">
      <summary>
        <para>The physical unit to specify positions and sizes in.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.CanvasScaler.referencePixelsPerUnit">
      <summary>
        <para>If a sprite has this 'Pixels Per Unit' setting, then one pixel in the sprite will cover one unit in the UI.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.CanvasScaler.referenceResolution">
      <summary>
        <para>The resolution the UI layout is designed for.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.CanvasScaler.scaleFactor">
      <summary>
        <para>Scales all UI elements in the Canvas by this factor.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.CanvasScaler.screenMatchMode">
      <summary>
        <para>A mode used to scale the canvas area if the aspect ratio of the current resolution doesn't fit the reference resolution.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.CanvasScaler.uiScaleMode">
      <summary>
        <para>Determines how UI elements in the Canvas are scaled.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.CanvasScaler.Handle">
      <summary>
        <para>Method that handles calculations of canvas scaling.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.CanvasScaler.HandleConstantPhysicalSize">
      <summary>
        <para>Handles canvas scaling for a constant physical size.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.CanvasScaler.HandleConstantPixelSize">
      <summary>
        <para>Handles canvas scaling for a constant pixel size.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.CanvasScaler.HandleScaleWithScreenSize">
      <summary>
        <para>Handles canvas scaling that scales with the screen size.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.CanvasScaler.HandleWorldCanvas">
      <summary>
        <para>Handles canvas scaling for world canvas.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.CanvasScaler.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.CanvasScaler.ScaleMode">
      <summary>
        <para>Determines how UI elements in the Canvas are scaled.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.CanvasScaler.ScaleMode.ConstantPhysicalSize">
      <summary>
        <para>Using the Constant Physical Size mode, positions and sizes of UI elements are specified in physical units, such as millimeters, points, or picas.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.CanvasScaler.ScaleMode.ConstantPixelSize">
      <summary>
        <para>Using the Constant Pixel Size mode, positions and sizes of UI elements are specified in pixels on the screen.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.CanvasScaler.ScaleMode.ScaleWithScreenSize">
      <summary>
        <para>Using the Scale With Screen Size mode, positions and sizes can be specified according to the pixels of a specified reference resolution.
If the current screen resolution is larger then the reference resolution, the Canvas will keep having only the resolution of the reference resolution, but will scale up in order to fit the screen. If the current screen resolution is smaller than the reference resolution, the Canvas will similarly be scaled down to fit.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.CanvasScaler.ScreenMatchMode">
      <summary>
        <para>Scale the canvas area with the width as reference, the height as reference, or something in between.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.CanvasScaler.ScreenMatchMode.Expand">
      <summary>
        <para>Expand the canvas area either horizontally or vertically, so the size of the canvas will never be smaller than the reference.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.CanvasScaler.ScreenMatchMode.MatchWidthOrHeight">
      <summary>
        <para>Scale the canvas area with the width as reference, the height as reference, or something in between.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.CanvasScaler.ScreenMatchMode.Shrink">
      <summary>
        <para>Crop the canvas area either horizontally or vertically, so the size of the canvas will never be larger than the reference.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.CanvasScaler.SetReferencePixelsPerUnit(System.Single)">
      <summary>
        <para>Sets the referencePixelsPerUnit on the Canvas.</para>
      </summary>
      <param name="referencePixelsPerUnit"></param>
    </member>
    <member name="M:UnityEngine.UI.CanvasScaler.SetScaleFactor(System.Single)">
      <summary>
        <para>Sets the scale factor on the canvas.</para>
      </summary>
      <param name="scaleFactor">The scale factor to use.</param>
    </member>
    <member name="T:UnityEngine.UI.CanvasScaler.Unit">
      <summary>
        <para>Settings used to specify a physical unit.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.CanvasScaler.Unit.Centimeters">
      <summary>
        <para>Use centimeters.
A centimeter is 1/100 of a meter.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.CanvasScaler.Unit.Inches">
      <summary>
        <para>Use inches.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.CanvasScaler.Unit.Millimeters">
      <summary>
        <para>Use millimeters.
A millimeter is 1/10 of a centimeter, and 1/1000 of a meter.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.CanvasScaler.Unit.Picas">
      <summary>
        <para>Use picas.
One pica is 1/6 of an inch.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.CanvasScaler.Unit.Points">
      <summary>
        <para>Use points.
One point is 1/12 of a pica, and 1/72 of an inch.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.CanvasScaler.Update">
      <summary>
        <para>Handles per-frame checking if the canvas scaling needs to be updated.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.CanvasUpdate">
      <summary>
        <para>Values of 'update' called on a [[Canvas]] update.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.CanvasUpdate.LatePreRender">
      <summary>
        <para>Called late, before render.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.CanvasUpdate.Layout">
      <summary>
        <para>Called for layout.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.CanvasUpdate.MaxUpdateValue">
      <summary>
        <para>Max enum value.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.CanvasUpdate.PostLayout">
      <summary>
        <para>Called after layout.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.CanvasUpdate.Prelayout">
      <summary>
        <para>Called before layout.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.CanvasUpdate.PreRender">
      <summary>
        <para>Called before rendering.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.CanvasUpdateRegistry">
      <summary>
        <para>A place where CanvasElements can register themselves for rebuilding.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.CanvasUpdateRegistry.instance">
      <summary>
        <para>Get the singleton registry.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.CanvasUpdateRegistry.IsRebuildingGraphics">
      <summary>
        <para>Are graphics being rebuild.</para>
      </summary>
      <returns>
        <para>Rebuilding graphics.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.CanvasUpdateRegistry.IsRebuildingLayout">
      <summary>
        <para>Is layout being rebuilt?</para>
      </summary>
      <returns>
        <para>Rebuilding layout.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.CanvasUpdateRegistry.RegisterCanvasElementForGraphicRebuild(UnityEngine.UI.ICanvasElement)">
      <summary>
        <para>Rebuild the graphics of the given element.</para>
      </summary>
      <param name="element">Element to rebuild.</param>
    </member>
    <member name="M:UnityEngine.UI.CanvasUpdateRegistry.RegisterCanvasElementForLayoutRebuild(UnityEngine.UI.ICanvasElement)">
      <summary>
        <para>Rebuild the layout of the given element.</para>
      </summary>
      <param name="element">Element to rebuild.</param>
    </member>
    <member name="M:UnityEngine.UI.CanvasUpdateRegistry.TryRegisterCanvasElementForGraphicRebuild(UnityEngine.UI.ICanvasElement)">
      <summary>
        <para>Rebuild the layout of the given element.</para>
      </summary>
      <param name="element">Element to rebuild.</param>
      <returns>
        <para>Was the element scheduled.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.CanvasUpdateRegistry.TryRegisterCanvasElementForLayoutRebuild(UnityEngine.UI.ICanvasElement)">
      <summary>
        <para>Was the element scheduled.</para>
      </summary>
      <param name="element">Element to rebuild.</param>
      <returns>
        <para>Was the element scheduled.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.CanvasUpdateRegistry.UnRegisterCanvasElementForRebuild(UnityEngine.UI.ICanvasElement)">
      <summary>
        <para>Remove the given element from rebuild.</para>
      </summary>
      <param name="element">Element to remove.</param>
    </member>
    <member name="T:UnityEngine.UI.ClipperRegistry">
      <summary>
        <para>Registry class to keep track of all IClippers that exist in the scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ClipperRegistry.instance">
      <summary>
        <para>Singleton instance.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ClipperRegistry.Cull">
      <summary>
        <para>Perform the clipping on all registered [[IClipper]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ClipperRegistry.Register(UnityEngine.UI.IClipper)">
      <summary>
        <para>Register an [[IClipper]].</para>
      </summary>
      <param name="c"></param>
    </member>
    <member name="M:UnityEngine.UI.ClipperRegistry.Unregister(UnityEngine.UI.IClipper)">
      <summary>
        <para>Unregister an [[IClipper]].</para>
      </summary>
      <param name="c"></param>
    </member>
    <member name="T:UnityEngine.UI.Clipping">
      <summary>
        <para>Utility class to help when clipping using [[IClipper]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Clipping.FindCullAndClipWorldRect(System.Collections.Generic.List`1&lt;UnityEngine.UI.RectMask2D&gt;,System.Boolean&amp;)">
      <summary>
        <para>Find the Rect to use for clipping.</para>
      </summary>
      <param name="rectMaskParents">RectMasks to build the overlap rect from.</param>
      <param name="validRect">Was there a valid [[Rect]] found.</param>
      <returns>
        <para>The compound [[Rect]].</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UI.ColorBlock">
      <summary>
        <para>Structure to store the state of a color transition on a [[Selectable]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ColorBlock.colorMultiplier">
      <summary>
        <para>Multiplier applied to colors (allows brightening greater then base color).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ColorBlock.defaultColorBlock">
      <summary>
        <para>Simple getter for the default ColorBlock.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ColorBlock.disabledColor">
      <summary>
        <para>Disabled Color.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ColorBlock.fadeDuration">
      <summary>
        <para>How long a color transition should take.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ColorBlock.highlightedColor">
      <summary>
        <para>Highlighted Color.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ColorBlock.normalColor">
      <summary>
        <para>Normal Color.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ColorBlock.pressedColor">
      <summary>
        <para>Pressed Color.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.ContentSizeFitter">
      <summary>
        <para>Resizes a RectTransform to fit the size of its content.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ContentSizeFitter.horizontalFit">
      <summary>
        <para>The fit mode to use to determine the width.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ContentSizeFitter.verticalFit">
      <summary>
        <para>The fit mode to use to determine the height.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.ContentSizeFitter.FitMode">
      <summary>
        <para>The size fit mode to use.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.ContentSizeFitter.FitMode.MinSize">
      <summary>
        <para>Resize to the minimum size of the content.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.ContentSizeFitter.FitMode.PreferredSize">
      <summary>
        <para>Resize to the preferred size of the content.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.ContentSizeFitter.FitMode.Unconstrained">
      <summary>
        <para>Don't perform any resizing.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ContentSizeFitter.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ContentSizeFitter.SetDirty">
      <summary>
        <para>Mark the ContentSizeFitter as dirty.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ContentSizeFitter.SetLayoutHorizontal">
      <summary>
        <para>Method called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ContentSizeFitter.SetLayoutVertical">
      <summary>
        <para>Method called by the layout system.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.DefaultControls">
      <summary>
        <para>Utility class for creating default implementations of builtin UI controls.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.DefaultControls.CreateButton(UnityEngine.UI.DefaultControls/Resources)">
      <summary>
        <para>Create a button.</para>
      </summary>
      <param name="resources">Object with resources to use.</param>
      <returns>
        <para>The root GameObject of the created element.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.DefaultControls.CreateDropdown(UnityEngine.UI.DefaultControls/Resources)">
      <summary>
        <para>Create a dropdown.</para>
      </summary>
      <param name="resources">Object with resources to use.</param>
      <returns>
        <para>The root GameObject of the created element.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.DefaultControls.CreateImage(UnityEngine.UI.DefaultControls/Resources)">
      <summary>
        <para>Create an image.</para>
      </summary>
      <param name="resources">Object with resources to use.</param>
      <returns>
        <para>The root GameObject of the created element.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.DefaultControls.CreateInputField(UnityEngine.UI.DefaultControls/Resources)">
      <summary>
        <para>Create an input field.</para>
      </summary>
      <param name="resources">Object with resources to use.</param>
      <returns>
        <para>The root GameObject of the created element.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.DefaultControls.CreatePanel(UnityEngine.UI.DefaultControls/Resources)">
      <summary>
        <para>Create a panel.</para>
      </summary>
      <param name="resources">Object with resources to use.</param>
      <returns>
        <para>The root GameObject of the created element.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.DefaultControls.CreateRawImage(UnityEngine.UI.DefaultControls/Resources)">
      <summary>
        <para>Create a raw image.</para>
      </summary>
      <param name="resources">Object with resources to use.</param>
      <returns>
        <para>The root GameObject of the created element.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.DefaultControls.CreateScrollbar(UnityEngine.UI.DefaultControls/Resources)">
      <summary>
        <para>Create a scrollbar.</para>
      </summary>
      <param name="resources">Object with resources to use.</param>
      <returns>
        <para>The root GameObject of the created element.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.DefaultControls.CreateScrollView(UnityEngine.UI.DefaultControls/Resources)">
      <summary>
        <para>Create a scroll view.</para>
      </summary>
      <param name="resources">Object with resources to use.</param>
      <returns>
        <para>The root GameObject of the created element.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.DefaultControls.CreateSlider(UnityEngine.UI.DefaultControls/Resources)">
      <summary>
        <para>Create a slider.</para>
      </summary>
      <param name="resources">Object with resources to use.</param>
      <returns>
        <para>The root GameObject of the created element.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.DefaultControls.CreateText(UnityEngine.UI.DefaultControls/Resources)">
      <summary>
        <para>Create a text object.</para>
      </summary>
      <param name="resources">C.</param>
      <returns>
        <para>The root GameObject of the created element.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.DefaultControls.CreateToggle(UnityEngine.UI.DefaultControls/Resources)">
      <summary>
        <para>Create a toggle.</para>
      </summary>
      <param name="resources">Object with resources to use.</param>
      <returns>
        <para>The root GameObject of the created element.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.UI.DefaultControls.Resources">
      <summary>
        <para>Object used to pass resources to use for the default controls.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.DefaultControls.Resources.background">
      <summary>
        <para>Sprite used for background elements.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.DefaultControls.Resources.checkmark">
      <summary>
        <para>Sprite used for representation of an "on" state when present, such as a checkmark.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.DefaultControls.Resources.dropdown">
      <summary>
        <para>Sprite used to indicate that a button will open a dropdown when clicked.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.DefaultControls.Resources.inputField">
      <summary>
        <para>Sprite used as background for input fields.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.DefaultControls.Resources.knob">
      <summary>
        <para>Sprite used for knobs that can be dragged, such as on a slider.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.DefaultControls.Resources.mask">
      <summary>
        <para>Sprite used for masking purposes, for example to be used for the viewport of a scroll view.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.DefaultControls.Resources.standard">
      <summary>
        <para>The primary sprite to be used for graphical UI elements, used by the button, toggle, and dropdown controls, among others.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.Dropdown">
      <summary>
        <para>A standard dropdown that presents a list of options when clicked, of which one can be chosen.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Dropdown.captionImage">
      <summary>
        <para>The Image component to hold the image of the currently selected option.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Dropdown.captionText">
      <summary>
        <para>The Text component to hold the text of the currently selected option.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Dropdown.itemImage">
      <summary>
        <para>The Image component to hold the image of the item.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Dropdown.itemText">
      <summary>
        <para>The Text component to hold the text of the item.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Dropdown.onValueChanged">
      <summary>
        <para>A UnityEvent that is invoked when when a user has clicked one of the options in the dropdown list.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Dropdown.options">
      <summary>
        <para>The list of possible options. A text string and an image can be specified for each option.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Dropdown.template">
      <summary>
        <para>The Rect Transform of the template for the dropdown list.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Dropdown.value">
      <summary>
        <para>The index of the currently selected option. 0 is the first option, 1 is the second, and so on.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Dropdown.CreateBlocker(UnityEngine.Canvas)">
      <summary>
        <para>Override this method to implement a different way to obtain a blocker GameObject.</para>
      </summary>
      <param name="rootCanvas">The root canvas the dropdown is under.</param>
      <returns>
        <para>The obtained blocker.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.Dropdown.CreateDropdownList(UnityEngine.GameObject)">
      <summary>
        <para>Override this method to implement a different way to obtain a dropdown list GameObject.</para>
      </summary>
      <param name="template">The template to create the dropdown list from.</param>
      <returns>
        <para>The obtained dropdown list.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.Dropdown.CreateItem(UnityEngine.UI.Dropdown/DropdownItem)">
      <summary>
        <para>Override this method to implement a different way to obtain an option item.</para>
      </summary>
      <param name="itemTemplate">The template to create the option item from.</param>
      <returns>
        <para>The obtained option item.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.Dropdown.DestroyBlocker(UnityEngine.GameObject)">
      <summary>
        <para>Override this method to implement a different way to dispose of a blocker GameObject that blocks clicks to other controls while the dropdown list is open.</para>
      </summary>
      <param name="blocker">The blocker to dispose of.</param>
    </member>
    <member name="M:UnityEngine.UI.Dropdown.DestroyDropdownList(UnityEngine.GameObject)">
      <summary>
        <para>Override this method to implement a different way to dispose of a dropdown list GameObject.</para>
      </summary>
      <param name="dropdownList">The dropdown list to dispose of.</param>
    </member>
    <member name="M:UnityEngine.UI.Dropdown.DestroyItem(UnityEngine.UI.Dropdown/DropdownItem)">
      <summary>
        <para>Override this method to implement a different way to dispose of an option item.</para>
      </summary>
      <param name="item">The option item to dispose of.</param>
    </member>
    <member name="T:UnityEngine.UI.Dropdown.DropdownEvent">
      <summary>
        <para>[[UnityEvent]] callback for when a dropdown current option is changed.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Dropdown.Hide">
      <summary>
        <para>Hide the dropdown list.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Dropdown.OnCancel(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>Called by a [[BaseInputModule]] when a Cancel event occurs.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.UI.Dropdown.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Handling for when the dropdown is 'clicked'.</para>
      </summary>
      <param name="eventData">Current event.</param>
    </member>
    <member name="M:UnityEngine.UI.Dropdown.OnSubmit(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>What to do when the event system sends a submit Event.</para>
      </summary>
      <param name="eventData">Current event.</param>
    </member>
    <member name="T:UnityEngine.UI.Dropdown.OptionData">
      <summary>
        <para>Class to store the text and/or image of a single option in the dropdown list.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Dropdown.OptionData.image">
      <summary>
        <para>The image associated with the option.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Dropdown.OptionData.text">
      <summary>
        <para>The text associated with the option.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Dropdown.OptionData.#ctor">
      <summary>
        <para>Create an object representing a single option for the dropdown list.</para>
      </summary>
      <param name="text">Optional text for the option.</param>
      <param name="image">Optional image for the option.</param>
    </member>
    <member name="M:UnityEngine.UI.Dropdown.OptionData.#ctor(System.String)">
      <summary>
        <para>Create an object representing a single option for the dropdown list.</para>
      </summary>
      <param name="text">Optional text for the option.</param>
      <param name="image">Optional image for the option.</param>
    </member>
    <member name="M:UnityEngine.UI.Dropdown.OptionData.#ctor(UnityEngine.Sprite)">
      <summary>
        <para>Create an object representing a single option for the dropdown list.</para>
      </summary>
      <param name="text">Optional text for the option.</param>
      <param name="image">Optional image for the option.</param>
    </member>
    <member name="M:UnityEngine.UI.Dropdown.OptionData.#ctor(System.String,UnityEngine.Sprite)">
      <summary>
        <para>Create an object representing a single option for the dropdown list.</para>
      </summary>
      <param name="text">Optional text for the option.</param>
      <param name="image">Optional image for the option.</param>
    </member>
    <member name="T:UnityEngine.UI.Dropdown.OptionDataList">
      <summary>
        <para>Class used internally to store the list of options for the dropdown list.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Dropdown.OptionDataList.options">
      <summary>
        <para>The list of options for the dropdown list.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Dropdown.Show">
      <summary>
        <para>Show the dropdown list.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.FontData">
      <summary>
        <para>Struct for storing [[Text]] generation settings.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.FontData.alignment">
      <summary>
        <para>How is the text aligned.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.FontData.bestFit">
      <summary>
        <para>Is best fit used.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.FontData.defaultFontData">
      <summary>
        <para>Get a font data with sensible defaults.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.FontData.font">
      <summary>
        <para>Font to use.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.FontData.fontSize">
      <summary>
        <para>Font size.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.FontData.fontStyle">
      <summary>
        <para>Font Style.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.FontData.horizontalOverflow">
      <summary>
        <para>Horizontal overflow mode.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.FontData.lineSpacing">
      <summary>
        <para>Line spacing.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.FontData.maxSize">
      <summary>
        <para>Maximum text size.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.FontData.minSize">
      <summary>
        <para>Minimum text size.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.FontData.richText">
      <summary>
        <para>Should RichText be used?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.FontData.verticalOverflow">
      <summary>
        <para>Vertical overflow mode.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.FontUpdateTracker">
      <summary>
        <para>Utility class that is used to help with [[Text]] update.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.FontUpdateTracker.TrackText(UnityEngine.UI.Text)">
      <summary>
        <para>Register a [[Text]] element for receiving texture atlas rebuild calls.</para>
      </summary>
      <param name="t"></param>
    </member>
    <member name="M:UnityEngine.UI.FontUpdateTracker.UntrackText(UnityEngine.UI.Text)">
      <summary>
        <para>Deregister a [[Text]] element from receiving texture atlas rebuild calls.</para>
      </summary>
      <param name="t"></param>
    </member>
    <member name="T:UnityEngine.UI.Graphic">
      <summary>
        <para>Base class for all visual UI Component.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Graphic.canvas">
      <summary>
        <para>A reference to the Canvas this Graphic is rendering to.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Graphic.canvasRenderer">
      <summary>
        <para>The CanvasRenderer used by this Graphic.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Graphic.color">
      <summary>
        <para>Base color of the Graphic.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Graphic.defaultGraphicMaterial">
      <summary>
        <para>Default material used to draw UI elements if no explicit material was specified.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Graphic.defaultMaterial">
      <summary>
        <para>Returns the default material for the graphic.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Graphic.depth">
      <summary>
        <para>Absolute depth of the graphic in the hierarchy, used by rendering and events.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Graphic.mainTexture">
      <summary>
        <para>The graphic's texture. (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Graphic.material">
      <summary>
        <para>The [[Material]] set by the user.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Graphic.materialForRendering">
      <summary>
        <para>The material that will be sent for Rendering (Read only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Graphic.raycastTarget">
      <summary>
        <para>Should this graphic be considered a target for raycasting?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Graphic.rectTransform">
      <summary>
        <para>The [[RectTransform]] component used by the Graphic.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Graphic.CrossFadeAlpha(System.Single,System.Single,System.Boolean)">
      <summary>
        <para>Tweens the alpha of the CanvasRenderer color associated with this Graphic.</para>
      </summary>
      <param name="alpha">Target alpha.</param>
      <param name="duration">Duration of the tween in seconds.</param>
      <param name="ignoreTimeScale">Should ignore [[Time.scale]]?</param>
    </member>
    <member name="M:UnityEngine.UI.Graphic.CrossFadeColor(UnityEngine.Color,System.Single,System.Boolean,System.Boolean)">
      <summary>
        <para>Tweens the CanvasRenderer color associated with this Graphic.</para>
      </summary>
      <param name="targetColor">Target color.</param>
      <param name="duration">Tween duration.</param>
      <param name="ignoreTimeScale">Should ignore [[Time.scale]]?</param>
      <param name="useAlpha">Should also Tween the alpha channel?</param>
    </member>
    <member name="M:UnityEngine.UI.Graphic.GetPixelAdjustedRect">
      <summary>
        <para>Returns a pixel perfect Rect closest to the Graphic RectTransform.</para>
      </summary>
      <returns>
        <para>Pixel perfect Rect.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.Graphic.GraphicUpdateComplete">
      <summary>
        <para>See [[ICanvasElement.GraphicUpdateComplete]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Graphic.LayoutComplete">
      <summary>
        <para>See [[ICanvasElement.LayoutComplete]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Graphic.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Graphic.OnPopulateMesh(UnityEngine.Mesh)">
      <summary>
        <para>Callback function when a UI element needs to generate vertices.</para>
      </summary>
      <param name="m">Mesh to populate with UI data.</param>
      <param name="vh"></param>
    </member>
    <member name="M:UnityEngine.UI.Graphic.OnPopulateMesh(UnityEngine.UI.VertexHelper)">
      <summary>
        <para>Callback function when a UI element needs to generate vertices.</para>
      </summary>
      <param name="m">Mesh to populate with UI data.</param>
      <param name="vh"></param>
    </member>
    <member name="M:UnityEngine.UI.Graphic.OnRebuildRequested">
      <summary>
        <para>Editor-only callback that is issued by Unity if a rebuild of the [[Graphic]] is required.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Graphic.PixelAdjustPoint(UnityEngine.Vector2)">
      <summary>
        <para>Adjusts the given pixel to be pixel perfect.</para>
      </summary>
      <param name="point">Local space point.</param>
      <returns>
        <para>Pixel perfect adjusted point.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.Graphic.Raycast(UnityEngine.Vector2,UnityEngine.Camera)">
      <summary>
        <para>When a [[GraphicRaycaster]] is raycasting into the scene it will first filter the elments using their [[RectTransform]] rect and then it will use this function to determine the elements hit mby the raycast.</para>
      </summary>
      <param name="sp">Screen point.</param>
      <param name="eventCamera">Camera.</param>
      <returns>
        <para>True if the provided point is a valid location for [[GraphicRaycaster]] raycasts.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.Graphic.Rebuild(UnityEngine.UI.CanvasUpdate)">
      <summary>
        <para>Rebuilds the graphic geometry and its material on the PreRender cycle.</para>
      </summary>
      <param name="update">The current step of the rendering [[CanvasUpdate]] cycle.</param>
    </member>
    <member name="M:UnityEngine.UI.Graphic.RegisterDirtyLayoutCallback(UnityEngine.Events.UnityAction)">
      <summary>
        <para>Add a listener to receive notification when the graphics layout is dirtied.</para>
      </summary>
      <param name="action"></param>
    </member>
    <member name="M:UnityEngine.UI.Graphic.RegisterDirtyMaterialCallback(UnityEngine.Events.UnityAction)">
      <summary>
        <para>Add a listener to receive notification when the graphics material is dirtied.</para>
      </summary>
      <param name="action"></param>
    </member>
    <member name="M:UnityEngine.UI.Graphic.RegisterDirtyVerticesCallback(UnityEngine.Events.UnityAction)">
      <summary>
        <para>Add a listener to receive notification when the graphics vertices are dirtied.</para>
      </summary>
      <param name="action"></param>
    </member>
    <member name="M:UnityEngine.UI.Graphic.SetAllDirty">
      <summary>
        <para>Mark the Graphic as dirty.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Graphic.SetLayoutDirty">
      <summary>
        <para>Mark the layout as dirty.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Graphic.SetMaterialDirty">
      <summary>
        <para>Mark the [[Material]] as dirty.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Graphic.SetNativeSize">
      <summary>
        <para>Adjusts the graphic size to make it pixel-perfect.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Graphic.SetVerticesDirty">
      <summary>
        <para>Mark the vertices as dirty.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Graphic.UnregisterDirtyLayoutCallback(UnityEngine.Events.UnityAction)">
      <summary>
        <para>Remove a listener from receiving notifications when the graphics layout is dirtied.</para>
      </summary>
      <param name="action"></param>
    </member>
    <member name="M:UnityEngine.UI.Graphic.UnregisterDirtyMaterialCallback(UnityEngine.Events.UnityAction)">
      <summary>
        <para>Remove a listener from receiving notifications when the graphics material is dirtied.</para>
      </summary>
      <param name="action"></param>
    </member>
    <member name="M:UnityEngine.UI.Graphic.UnregisterDirtyVerticesCallback(UnityEngine.Events.UnityAction)">
      <summary>
        <para>Remove a listener from receiving notifications when the graphics vertices are dirtied.</para>
      </summary>
      <param name="action">The delegate function to remove.</param>
    </member>
    <member name="M:UnityEngine.UI.Graphic.UpdateGeometry">
      <summary>
        <para>Call to update the geometry of the [[Graphic]] onto the [[CanvasRenderer]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Graphic.UpdateMaterial">
      <summary>
        <para>Call to update the [[Material]] of the graphic onto the [[CanvasRenderer]].</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.GraphicRaycaster">
      <summary>
        <para>A [[BaseRaycaster]] to raycast against Graphic elements.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.GraphicRaycaster.blockingObjects">
      <summary>
        <para>Type of objects that will block graphic raycasts.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.GraphicRaycaster.eventCamera">
      <summary>
        <para>See: [[BaseRaycaster]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.GraphicRaycaster.ignoreReversedGraphics">
      <summary>
        <para>Should graphics facing away from the raycaster be considered?</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.GraphicRaycaster.BlockingObjects">
      <summary>
        <para>List of Raycasters to check for canvas blocking elements.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.GraphicRaycaster.BlockingObjects.All">
      <summary>
        <para>Blocked by 2D and 3D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.GraphicRaycaster.BlockingObjects.None">
      <summary>
        <para>Not blocked.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.GraphicRaycaster.BlockingObjects.ThreeD">
      <summary>
        <para>3D physics blocking.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.GraphicRaycaster.BlockingObjects.TwoD">
      <summary>
        <para>2D physics blocking.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.GraphicRaycaster.Raycast(UnityEngine.EventSystems.PointerEventData,System.Collections.Generic.List`1&lt;UnityEngine.EventSystems.RaycastResult&gt;)">
      <summary>
        <para>See: [[BaseRaycaster]].</para>
      </summary>
      <param name="eventData"></param>
      <param name="resultAppendList"></param>
    </member>
    <member name="T:UnityEngine.UI.GraphicRebuildTracker">
      <summary>
        <para>EditorOnly class for tracking all Graphics.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.GraphicRebuildTracker.TrackGraphic(UnityEngine.UI.Graphic)">
      <summary>
        <para>Track a [[Graphic]].</para>
      </summary>
      <param name="g"></param>
    </member>
    <member name="M:UnityEngine.UI.GraphicRebuildTracker.UnTrackGraphic(UnityEngine.UI.Graphic)">
      <summary>
        <para>Untrack a [[Graphic]].</para>
      </summary>
      <param name="g"></param>
    </member>
    <member name="T:UnityEngine.UI.GraphicRegistry">
      <summary>
        <para>Registry which maps a [[Graphic]] to the canvas it belongs to.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.GraphicRegistry.instance">
      <summary>
        <para>Singleton instance.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.GraphicRegistry.GetGraphicsForCanvas(UnityEngine.Canvas)">
      <summary>
        <para>Return a list of [[Graphic]]s that are registered on the [[Canvas]].</para>
      </summary>
      <param name="canvas">Input canvas.</param>
      <returns>
        <para>Graphics on the input canvas.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.GraphicRegistry.RegisterGraphicForCanvas(UnityEngine.Canvas,UnityEngine.UI.Graphic)">
      <summary>
        <para>Store a link between the given canvas and graphic in the registry.</para>
      </summary>
      <param name="c">Canvas to register.</param>
      <param name="graphic">Graphic to register.</param>
    </member>
    <member name="M:UnityEngine.UI.GraphicRegistry.UnregisterGraphicForCanvas(UnityEngine.Canvas,UnityEngine.UI.Graphic)">
      <summary>
        <para>Deregister the given [[Graphic]] from a [[Canvas]].</para>
      </summary>
      <param name="c">Canvas.</param>
      <param name="graphic">Graphic to deregister.</param>
    </member>
    <member name="T:UnityEngine.UI.GridLayoutGroup">
      <summary>
        <para>Layout child layout elements in a grid.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.GridLayoutGroup.cellSize">
      <summary>
        <para>The size to use for each cell in the grid.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.GridLayoutGroup.constraint">
      <summary>
        <para>Which constraint to use for the GridLayoutGroup.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.GridLayoutGroup.constraintCount">
      <summary>
        <para>How many cells there should be along the constrained axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.GridLayoutGroup.spacing">
      <summary>
        <para>The spacing to use between layout elements in the grid.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.GridLayoutGroup.startAxis">
      <summary>
        <para>Which axis should cells be placed along first?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.GridLayoutGroup.startCorner">
      <summary>
        <para>Which corner should the first cell be placed in?</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.GridLayoutGroup.Axis">
      <summary>
        <para>An axis that can be horizontal or vertical.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.GridLayoutGroup.Axis.Horizontal">
      <summary>
        <para>Horizontal.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.GridLayoutGroup.Axis.Vertical">
      <summary>
        <para>Vertical.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.GridLayoutGroup.CalculateLayoutInputHorizontal">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.GridLayoutGroup.CalculateLayoutInputVertical">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.GridLayoutGroup.Constraint">
      <summary>
        <para>A constraint on either the number of columns or rows.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.GridLayoutGroup.Constraint.FixedColumnCount">
      <summary>
        <para>Constraint the number of columns to a specified number.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.GridLayoutGroup.Constraint.FixedRowCount">
      <summary>
        <para>Constraint the number of rows to a specified number.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.GridLayoutGroup.Constraint.Flexible">
      <summary>
        <para>Don't constrain the number of rows or columns.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.GridLayoutGroup.Corner">
      <summary>
        <para>One of the four corners in a rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.GridLayoutGroup.Corner.LowerLeft">
      <summary>
        <para>Lower left.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.GridLayoutGroup.Corner.LowerRight">
      <summary>
        <para>Lower right.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.GridLayoutGroup.Corner.UpperLeft">
      <summary>
        <para>Upper left.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.GridLayoutGroup.Corner.UpperRight">
      <summary>
        <para>Upper right.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.GridLayoutGroup.SetLayoutHorizontal">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.GridLayoutGroup.SetLayoutVertical">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.HorizontalLayoutGroup">
      <summary>
        <para>Layout child layout elements side by side.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.HorizontalLayoutGroup.CalculateLayoutInputHorizontal">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.HorizontalLayoutGroup.CalculateLayoutInputVertical">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.HorizontalLayoutGroup.SetLayoutHorizontal">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.HorizontalLayoutGroup.SetLayoutVertical">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.HorizontalOrVerticalLayoutGroup">
      <summary>
        <para>Abstract base class for [[HorizontalLayoutGroup]] and [[VerticalLayoutGroup]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.HorizontalOrVerticalLayoutGroup.childForceExpandHeight">
      <summary>
        <para>Whether to force the children to expand to fill additional available vertical space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.HorizontalOrVerticalLayoutGroup.childForceExpandWidth">
      <summary>
        <para>Whether to force the children to expand to fill additional available horizontal space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.HorizontalOrVerticalLayoutGroup.spacing">
      <summary>
        <para>The spacing to use between layout elements in the layout group.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.HorizontalOrVerticalLayoutGroup.CalcAlongAxis(System.Int32,System.Boolean)">
      <summary>
        <para>Calculate the layout element properties for this layout element along the given axis.</para>
      </summary>
      <param name="axis">The axis to calculate for. 0 is horizontal and 1 is vertical.</param>
      <param name="isVertical">Is this group a vertical group?</param>
    </member>
    <member name="M:UnityEngine.UI.HorizontalOrVerticalLayoutGroup.SetChildrenAlongAxis(System.Int32,System.Boolean)">
      <summary>
        <para>Set the positions and sizes of the child layout elements for the given axis.</para>
      </summary>
      <param name="axis">The axis to handle. 0 is horizontal and 1 is vertical.</param>
      <param name="isVertical">Is this group a vertical group?</param>
    </member>
    <member name="?:UnityEngine.UI.ICanvasElement">
      <summary>
        <para>This is an element that can live on a Canvas.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ICanvasElement.transform">
      <summary>
        <para>Get the transform associated with the ICanvasElement.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ICanvasElement.GraphicUpdateComplete">
      <summary>
        <para>Callback sent when this ICanvasElement has completed Graphic rebuild.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ICanvasElement.IsDestroyed">
      <summary>
        <para>Return true if the element is considered destroyed.
Used if the native representation has been destroyed.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ICanvasElement.LayoutComplete">
      <summary>
        <para>Callback sent when this ICanvasElement has completed layout.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ICanvasElement.Rebuild(UnityEngine.UI.CanvasUpdate)">
      <summary>
        <para>Rebuild the element for the given stage.</para>
      </summary>
      <param name="executing">Stage being rebuild.</param>
    </member>
    <member name="?:UnityEngine.UI.IClippable">
      <summary>
        <para>Interface for elements that can be clipped if they are under an [[IClipper].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.IClippable.rectTransform">
      <summary>
        <para>[[RectTransform]] of the clippable.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.IClippable.Cull(UnityEngine.Rect,System.Boolean)">
      <summary>
        <para>Clip and cull the [[IClippable]] given the clipRect.</para>
      </summary>
      <param name="clipRect">Rectangle to clip against.</param>
      <param name="validRect">Is the [[Rect]] valid. If not then the rect has 0 size.</param>
    </member>
    <member name="M:UnityEngine.UI.IClippable.RecalculateClipping">
      <summary>
        <para>Called when the state of a parent [[IClippable]] changes.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.IClippable.SetClipRect(UnityEngine.Rect,System.Boolean)">
      <summary>
        <para>Set the clip rect for the [[IClippable]].</para>
      </summary>
      <param name="value"></param>
      <param name="validRect"></param>
    </member>
    <member name="?:UnityEngine.UI.IClipper">
      <summary>
        <para>Interface that can be used to recieve clipping callbacks as part of the canvas update loop.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.IClipper.PerformClipping">
      <summary>
        <para>Called after layout and before [[Graphic]] update of the Canvas update loop.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.UI.ILayoutController">
      <summary>
        <para>Base interface to implement by componets that control the layout of RectTransforms.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ILayoutController.SetLayoutHorizontal">
      <summary>
        <para>Callback invoked by the auto layout system which handles horizontal aspects of the layout.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ILayoutController.SetLayoutVertical">
      <summary>
        <para>Callback invoked by the auto layout system which handles vertical aspects of the layout.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.UI.ILayoutElement">
      <summary>
        <para>A component is treated as a layout element by the auto layout system if it implements ILayoutElement.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ILayoutElement.flexibleHeight">
      <summary>
        <para>The extra relative height this layout element should be allocated if there is additional available space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ILayoutElement.flexibleWidth">
      <summary>
        <para>The extra relative width this layout element should be allocated if there is additional available space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ILayoutElement.layoutPriority">
      <summary>
        <para>The layout priority of this component.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ILayoutElement.minHeight">
      <summary>
        <para>The minimum height this layout element may be allocated.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ILayoutElement.minWidth">
      <summary>
        <para>The minimum width this layout element may be allocated.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ILayoutElement.preferredHeight">
      <summary>
        <para>The preferred height this layout element should be allocated if there is sufficient space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ILayoutElement.preferredWidth">
      <summary>
        <para>The preferred width this layout element should be allocated if there is sufficient space.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ILayoutElement.CalculateLayoutInputHorizontal">
      <summary>
        <para>The minWidth, preferredWidth, and flexibleWidth values may be calculated in this callback.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ILayoutElement.CalculateLayoutInputVertical">
      <summary>
        <para>The minHeight, preferredHeight, and flexibleHeight values may be calculated in this callback.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.UI.ILayoutGroup">
      <summary>
        <para>ILayoutGroup is an ILayoutController that should drive the RectTransforms of its children.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.UI.ILayoutIgnorer">
      <summary>
        <para>A RectTransform will be ignored by the layout system if it has a component which implements ILayoutIgnorer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ILayoutIgnorer.ignoreLayout">
      <summary>
        <para>Should this RectTransform be ignored bvy the layout system?</para>
      </summary>
    </member>
    <member name="?:UnityEngine.UI.ILayoutSelfController">
      <summary>
        <para>ILayoutSelfController is an ILayoutController that should drive its own RectTransform.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.Image">
      <summary>
        <para>Displays a [[Sprite]] for the UI System.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.eventAlphaThreshold">
      <summary>
        <para>The alpha threshold specifying the minimum alpha a pixel must have for the event to be passed through.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.fillAmount">
      <summary>
        <para>Amount of the Image shown when the [[Image.type]] is set to [[Image.Type.Filled]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.fillCenter">
      <summary>
        <para>Whether or not to render the center of a Tiled or Sliced image.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.fillClockwise">
      <summary>
        <para>Whether the Image should be filled clockwise (true) or counter-clockwise (false).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.fillMethod">
      <summary>
        <para>What type of fill method to use.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.fillOrigin">
      <summary>
        <para>Controls the origin point of the Fill process. Value means different things with each fill method.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.flexibleHeight">
      <summary>
        <para>See [[ILayoutElement.flexibleHeight]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.flexibleWidth">
      <summary>
        <para>See [[ILayoutElement.flexibleWidth]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.hasBorder">
      <summary>
        <para>True if the sprite used has borders.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.layoutPriority">
      <summary>
        <para>See [[ILayoutElement.layoutPriority]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.mainTexture">
      <summary>
        <para>The image's texture. (ReadOnly).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.minHeight">
      <summary>
        <para>See [[ILayoutElement.minHeight]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.minWidth">
      <summary>
        <para>See [[ILayoutElement.minWidth]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.overrideSprite">
      <summary>
        <para>Set an override sprite to be used for rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.pixelsPerUnit">
      <summary>
        <para>The number of pixels in the Image that correspond to one unit in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.preferredHeight">
      <summary>
        <para>See [[ILayoutElement.preferredHeight]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.preferredWidth">
      <summary>
        <para>See [[ILayoutElement.preferredWidth]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.preserveAspect">
      <summary>
        <para>Whether this image should preserve its Sprite aspect ratio.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.sprite">
      <summary>
        <para>The sprite that is used to render this image.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Image.type">
      <summary>
        <para>How the Image is draw.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Image.CalculateLayoutInputHorizontal">
      <summary>
        <para>See [[ILayoutElement.CalculateLayoutInputHorizontal]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Image.CalculateLayoutInputVertical">
      <summary>
        <para>See [[ILayoutElement.CalculateLayoutInputVertical]].</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.Image.FillMethod">
      <summary>
        <para>Fill method to be used by the [[Image]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.FillMethod.Horizontal">
      <summary>
        <para>The Image will be filled Horizontally.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.FillMethod.Radial180">
      <summary>
        <para>The Image will be filled Radially with the radial center in one of the edges.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.FillMethod.Radial360">
      <summary>
        <para>The Image will be filled Radially with the radial center at the center.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.FillMethod.Radial90">
      <summary>
        <para>The Image will be filled Radially with the radial center in one of the corners.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.FillMethod.Vertical">
      <summary>
        <para>The Image will be filled Vertically.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Image.IsRaycastLocationValid(UnityEngine.Vector2,UnityEngine.Camera)">
      <summary>
        <para>See:[[ICanvasRaycastFilter]].</para>
      </summary>
      <param name="screenPoint"></param>
      <param name="eventCamera"></param>
    </member>
    <member name="M:UnityEngine.UI.Image.OnAfterDeserialize">
      <summary>
        <para>Serialization Callback.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Image.OnBeforeSerialize">
      <summary>
        <para>Serialization Callback.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.Image.Origin180">
      <summary>
        <para>Origin for the [[Image.FillMethod.Radial180]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.Origin180.Bottom">
      <summary>
        <para>Center of the radial at the center of the Bottom edge.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.Origin180.Left">
      <summary>
        <para>Center of the radial at the center of the Left edge.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.Origin180.Right">
      <summary>
        <para>Center of the radial at the center of the Right edge.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.Origin180.Top">
      <summary>
        <para>Center of the radial at the center of the Top edge.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.Image.Origin360">
      <summary>
        <para>One of the points of the Arc for the [[Image.FillMethod.Radial360]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.Origin360.Bottom">
      <summary>
        <para>Arc starting at the center of the Bottom edge.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.Origin360.Left">
      <summary>
        <para>Arc starting at the center of the Left edge.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.Origin360.Right">
      <summary>
        <para>Arc starting at the center of the Right edge.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.Origin360.Top">
      <summary>
        <para>Arc starting at the center of the Top edge.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.Image.Origin90">
      <summary>
        <para>Origin for the [[Image.FillMethod.Radial90]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.Origin90.BottomLeft">
      <summary>
        <para>Radial starting at the Bottom Left corner.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.Origin90.BottomRight">
      <summary>
        <para>Radial starting at the Bottom Right corner.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.Origin90.TopLeft">
      <summary>
        <para>Radial starting at the Top Left corner.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.Origin90.TopRight">
      <summary>
        <para>Radial starting at the Top Right corner.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.Image.OriginHorizontal">
      <summary>
        <para>Origin for the [[Image.FillMethod.Horizontal]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.OriginHorizontal.Left">
      <summary>
        <para>Origin at the Left side.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.OriginHorizontal.Right">
      <summary>
        <para>Origin at the Right side.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.Image.OriginVertical">
      <summary>
        <para>Origin for the [[Image.FillMethod.Vertical]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.OriginVertical.Bottom">
      <summary>
        <para>Origin at the Bottom edge.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.OriginVertical.Top">
      <summary>
        <para>Origin at the Top edge.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Image.SetNativeSize">
      <summary>
        <para>Adjusts the image size to make it pixel-perfect.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.Image.Type">
      <summary>
        <para>Image Type.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.Type.Filled">
      <summary>
        <para>Display portion of the Image.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.Type.Simple">
      <summary>
        <para>Displayes the full Image.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.Type.Sliced">
      <summary>
        <para>Displays the Image as a 9-sliced Image.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Image.Type.Tiled">
      <summary>
        <para>Displays the Image Tiling the central part of the Sprite.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.UI.IMask">
      <summary>
        <para>Is this element a mask.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.IMask.rectTransform">
      <summary>
        <para>Return the [[RectTransform]] associated with this mask.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.IMask.Enabled">
      <summary>
        <para>Is the mask enabled.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.UI.IMaskable">
      <summary>
        <para>This element is capable of being masked out.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.IMaskable.RecalculateMasking">
      <summary>
        <para>Recalculate masking for this element and all children elements.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.UI.IMaterialModifier">
      <summary>
        <para>Interface which allows for the modification of the [[Material]] used to render a [[Graphic]] before they are passed to the [[CanvasRenderer]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.IMaterialModifier.GetModifiedMaterial(UnityEngine.Material)">
      <summary>
        <para>Perform material modification in this function.</para>
      </summary>
      <param name="baseMaterial">Configured Material.</param>
      <returns>
        <para>Modified material.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.UI.IMeshModifier">
      <summary>
        <para>Interface which allows for the modification of verticies in a [[Graphic]] before they are passed to the [[CanvasRenderer]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.IMeshModifier.ModifyMesh(UnityEngine.Mesh)">
      <summary>
        <para>Call used to modify mesh.</para>
      </summary>
      <param name="mesh"></param>
    </member>
    <member name="T:UnityEngine.UI.InputField">
      <summary>
        <para>Turn a simple label into a interactable input field.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.asteriskChar">
      <summary>
        <para>The character used for password fields.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.caretBlinkRate">
      <summary>
        <para>The blinking rate of the input caret, defined as the number of times the blink cycle occurs per second.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.caretPosition">
      <summary>
        <para>Current InputField caret position (also selection tail).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.caretSelectPosition">
      <summary>
        <para>Current InputField selection head.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.characterLimit">
      <summary>
        <para>How many characters the input field is limited to. 0 = infinite.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.characterValidation">
      <summary>
        <para>The type of validation to perform on a character.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.contentType">
      <summary>
        <para>Specifies the type of the input text content.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.inputType">
      <summary>
        <para>The type of input expected. See InputField.InputType.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.isFocused">
      <summary>
        <para>Does the [[InputField]] currently have focus and is able to process events.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.keyboardType">
      <summary>
        <para>They type of mobile keyboard that will be used.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.lineType">
      <summary>
        <para>The [[LineType]] used by the [[InputField]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.multiLine">
      <summary>
        <para>If the input field supports multiple lines.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.onEndEdit">
      <summary>
        <para>The Unity Event to call when editing has ended.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.onValidateInput">
      <summary>
        <para>The function to call to validate the input characters.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.onValueChange">
      <summary>
        <para>Accessor to the [[OnChangeEvent]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.placeholder">
      <summary>
        <para>Optional graphic to show when the InputField text is empty.
A placeholder graphic can be used to show subtle hints or make it more obvious that the control is an InputField.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.selectionAnchorPosition">
      <summary>
        <para>The beginning point of the selection.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.selectionColor">
      <summary>
        <para>The color of the highlight to show which characters are selected.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.selectionFocusPosition">
      <summary>
        <para>The the end point of the selection.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.shouldHideMobileInput">
      <summary>
        <para>Should the mobile keyboard input be hidden.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.text">
      <summary>
        <para>The current value of the input field.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.textComponent">
      <summary>
        <para>The [[Text]] component that is going to be used to render the text to screen.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.InputField.wasCanceled">
      <summary>
        <para>If the [[UI.InputField]] was canceled and will revert back to the original text upon ::ref::DeactivateInputField.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.InputField.ActivateInputField">
      <summary>
        <para>Function to activate the [[InputField]] to begin processing [[Events]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.InputField.Append(System.String)">
      <summary>
        <para>Append a character to the input field.</para>
      </summary>
      <param name="input">Character / string to append.</param>
    </member>
    <member name="M:UnityEngine.UI.InputField.Append(System.Char)">
      <summary>
        <para>Append a character to the input field.</para>
      </summary>
      <param name="input">Character / string to append.</param>
    </member>
    <member name="T:UnityEngine.UI.InputField.CharacterValidation">
      <summary>
        <para>The type of characters that are allowed to be added to the string.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.CharacterValidation.Alphanumeric">
      <summary>
        <para>Allows letters A-Z, a-z and numbers 0-9.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.CharacterValidation.Decimal">
      <summary>
        <para>Allows decimal numbers (positive or negative).
Characters 0-9, . (dot), and - (dash / minus sign) are allowed. The dash is only allowed as the first character. Only one dot in the string is allowed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.CharacterValidation.EmailAddress">
      <summary>
        <para>Allows the characters that are allowed in an email address.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.CharacterValidation.Integer">
      <summary>
        <para>Allow whole numbers (positive or negative).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.CharacterValidation.Name">
      <summary>
        <para>Only allow names and enforces capitalization.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.CharacterValidation.None">
      <summary>
        <para>No validation. Any input is valid.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.InputField.ClampPos(System.Int32&amp;)">
      <summary>
        <para>Clamp the pos to be between 0 and the current text length.</para>
      </summary>
      <param name="pos">The position represenation to be clamped.</param>
    </member>
    <member name="T:UnityEngine.UI.InputField.ContentType">
      <summary>
        <para>Specifies the type of the input text content.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.ContentType.Alphanumeric">
      <summary>
        <para>Allows letters A-Z, a-z and numbers 0-9.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.ContentType.Autocorrected">
      <summary>
        <para>Allows all input and performs auto-correction on platforms that support it.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.ContentType.Custom">
      <summary>
        <para>Custom types that allows user-defined settings.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.ContentType.DecimalNumber">
      <summary>
        <para>Allows decimal numbers (positive or negative).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.ContentType.EmailAddress">
      <summary>
        <para>The input is used for typing in an email address.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.ContentType.IntegerNumber">
      <summary>
        <para>Allow whole numbers (positive or negative).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.ContentType.Name">
      <summary>
        <para>The InputField is used for typing in a name and enforces capitalization.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.ContentType.Password">
      <summary>
        <para>Allows all input and hides the typed characters by showing them as asterisks characters.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.ContentType.Pin">
      <summary>
        <para>Allows integer numbers and hides the typed characters by showing them as asterisks characters.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.ContentType.Standard">
      <summary>
        <para>Allows all input.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.InputField.DeactivateInputField">
      <summary>
        <para>Function to deactivate the [[InputField]] to stop the processing of [[Events]] and send OnSubmit if not canceled.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.InputField.GetCharacterIndexFromPosition(UnityEngine.Vector2)">
      <summary>
        <para>The character that is under the mouse.</para>
      </summary>
      <param name="pos">Mouse position.</param>
      <returns>
        <para>Character index with in value.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.InputField.GraphicUpdateComplete">
      <summary>
        <para>See [[ICanvasElement.GraphicUpdateComplete]].</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.InputField.InputType">
      <summary>
        <para>Type of data expected by the input field.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.InputType.AutoCorrect">
      <summary>
        <para>The mobile autocorrect keyboard.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.InputType.Password">
      <summary>
        <para>The mobile password keyboard.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.InputType.Standard">
      <summary>
        <para>The standard mobile keyboard.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.InputField.KeyPressed(UnityEngine.Event)">
      <summary>
        <para>Process the [[Event]] and perform the appropreate action for that key.</para>
      </summary>
      <param name="evt">The [[Event]] that is currently being processed.</param>
      <returns>
        <para>If we should continue processing events or we have hit an end condition.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.InputField.LayoutComplete">
      <summary>
        <para>See [[ICanvasElement.LayoutComplete]].</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.InputField.LineType">
      <summary>
        <para>The LineType is used to describe the behavior of the [[InputField]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.LineType.MultiLineNewline">
      <summary>
        <para>Is a multiline [[InputField]] with vertical scrolling and overflow. Pressing the return key will insert a new line character.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.LineType.MultiLineSubmit">
      <summary>
        <para>Is a multiline [[InputField]] with vertical scrolling and overflow. Pressing the return key will submit.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.InputField.LineType.SingleLine">
      <summary>
        <para>Only allows 1 line to be entered. Has horizontal scrolling and no word wrap. Pressing enter will submit the [[InputField]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.InputField.MoveTextEnd(System.Boolean)">
      <summary>
        <para>Move the caret index to end of text.</para>
      </summary>
      <param name="shift">Only move the selectionPosition.</param>
    </member>
    <member name="M:UnityEngine.UI.InputField.MoveTextStart(System.Boolean)">
      <summary>
        <para>Move the caret index to start of text.</para>
      </summary>
      <param name="shift">Only move the selectionPosition.</param>
    </member>
    <member name="M:UnityEngine.UI.InputField.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Capture the OnBeginDrag callback from the [[EventSystem]] and ensure we should listen to the drag events to follow.</para>
      </summary>
      <param name="eventData">The data passed by the [[EventSystem]].</param>
    </member>
    <member name="T:UnityEngine.UI.InputField.OnChangeEvent">
      <summary>
        <para>The callback sent anytime the [[Inputfield]] is updated.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.InputField.OnDeselect(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>What to do when the event system sends a Deselect Event.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.UI.InputField.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.InputField.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>What to do when the event system sends a Drag Event.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.UI.InputField.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Capture the OnEndDrag callback from the [[EventSystem]] and cancel the listening of drag events.</para>
      </summary>
      <param name="eventData">The eventData sent by the [[EventSystem]].</param>
    </member>
    <member name="M:UnityEngine.UI.InputField.OnFocus">
      <summary>
        <para>Focus the input field initializing properties.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.InputField.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>What to do when the event system sends a pointer click Event.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.UI.InputField.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>What to do when the event system sends a pointer down Event.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.UI.InputField.OnSubmit(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>What to do when the event system sends a submit Event.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.UI.InputField.OnUpdateSelected(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>What to do when the event system sends a Update selected Event.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="T:UnityEngine.UI.InputField.OnValidateInput">
      <summary>
        <para>Custom validation callback.</para>
      </summary>
      <param name="text"></param>
      <param name="charIndex"></param>
      <param name="addedChar"></param>
    </member>
    <member name="M:UnityEngine.UI.InputField.ProcessEvent(UnityEngine.Event)">
      <summary>
        <para>Helper function to allow separate events to be processed by the [[InputField]].</para>
      </summary>
      <param name="e">The [[Event]] to be processed.</param>
    </member>
    <member name="M:UnityEngine.UI.InputField.Rebuild(UnityEngine.UI.CanvasUpdate)">
      <summary>
        <para>Rebuild the input fields geometry. (caret and highlight).</para>
      </summary>
      <param name="update"></param>
    </member>
    <member name="M:UnityEngine.UI.InputField.ScreenToLocal(UnityEngine.Vector2)">
      <summary>
        <para>Convert screen space into input field local space.</para>
      </summary>
      <param name="screen"></param>
    </member>
    <member name="M:UnityEngine.UI.InputField.SelectAll">
      <summary>
        <para>Highlight the whole [[InputField]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.InputField.SendOnSubmit">
      <summary>
        <para>Convenience function to make functionality to send the ::ref::SubmitEvent easier.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.InputField.SubmitEvent">
      <summary>
        <para>Unity Event with a inputfield as a param.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.InputField.UpdateLabel">
      <summary>
        <para>Update the [[Text]] associated with this input field.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.InputField.Validate(System.String,System.Int32,System.Char)">
      <summary>
        <para>Predefined validation functionality for different characterValidation types.</para>
      </summary>
      <param name="text">The whole text string to validate.</param>
      <param name="pos">The position at which the current character is being inserted.</param>
      <param name="ch">The character that is being inserted.</param>
      <returns>
        <para>The character that should be inserted.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.UI.IVertexModifier">
      <summary>
        <para>Interface which allows for the modification of verticies in a [[Graphic]] before they are passed to the [[CanvasRenderer]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.IVertexModifier.ModifyVertices(System.Collections.Generic.List`1&lt;UnityEngine.UIVertex&gt;)">
      <summary>
        <para>Call used to modify vertices.</para>
      </summary>
      <param name="verts">To modify.</param>
    </member>
    <member name="T:UnityEngine.UI.LayoutElement">
      <summary>
        <para>Add this component to a GameObject to make it into a layout element or override values on an existing layout element.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.LayoutElement.flexibleHeight">
      <summary>
        <para>The extra relative height this layout element should be allocated if there is additional available space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.LayoutElement.flexibleWidth">
      <summary>
        <para>The extra relative width this layout element should be allocated if there is additional available space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.LayoutElement.ignoreLayout">
      <summary>
        <para>Should this RectTransform be ignored by the layout system?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.LayoutElement.layoutPriority">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.LayoutElement.minHeight">
      <summary>
        <para>The minimum height this layout element may be allocated.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.LayoutElement.minWidth">
      <summary>
        <para>The minimum width this layout element may be allocated.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.LayoutElement.preferredHeight">
      <summary>
        <para>The preferred height this layout element should be allocated if there is sufficient space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.LayoutElement.preferredWidth">
      <summary>
        <para>The preferred width this layout element should be allocated if there is sufficient space.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.LayoutElement.CalculateLayoutInputHorizontal">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.LayoutElement.CalculateLayoutInputVertical">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.LayoutElement.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.LayoutElement.SetDirty">
      <summary>
        <para>Mark the LayoutElement as dirty.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.LayoutGroup">
      <summary>
        <para>Abstract base class to use for layout groups.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.LayoutGroup.childAlignment">
      <summary>
        <para>The alignment to use for the child layout elements in the layout group.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.LayoutGroup.flexibleHeight">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.LayoutGroup.flexibleWidth">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.LayoutGroup.layoutPriority">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.LayoutGroup.minHeight">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.LayoutGroup.minWidth">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.LayoutGroup.padding">
      <summary>
        <para>The padding to add around the child layout elements.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.LayoutGroup.preferredHeight">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.LayoutGroup.preferredWidth">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.LayoutGroup.CalculateLayoutInputHorizontal">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.LayoutGroup.CalculateLayoutInputVertical">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.LayoutGroup.GetStartOffset(System.Int32,System.Single)">
      <summary>
        <para>Returns the calculated position of the first child layout element along the given axis.</para>
      </summary>
      <param name="axis">The axis index. 0 is horizontal and 1 is vertical.</param>
      <param name="requiredSpaceWithoutPadding">The total space required on the given axis for all the layout elements including spacing and excluding padding.</param>
      <returns>
        <para>The position of the first child along the given axis.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.LayoutGroup.GetTotalFlexibleSize(System.Int32)">
      <summary>
        <para>The flexible size for the layout group on the given axis.</para>
      </summary>
      <param name="axis">The axis index. 0 is horizontal and 1 is vertical.</param>
      <returns>
        <para>The flexible size.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.LayoutGroup.GetTotalMinSize(System.Int32)">
      <summary>
        <para>The min size for the layout group on the given axis.</para>
      </summary>
      <param name="axis">The axis index. 0 is horizontal and 1 is vertical.</param>
      <returns>
        <para>The min size.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.LayoutGroup.GetTotalPreferredSize(System.Int32)">
      <summary>
        <para>The preferred size for the layout group on the given axis.</para>
      </summary>
      <param name="axis">The axis index. 0 is horizontal and 1 is vertical.</param>
      <returns>
        <para>The preferred size.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.LayoutGroup.OnDidApplyAnimationProperties">
      <summary>
        <para>Callback for when properties have been changed by animation.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.LayoutGroup.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.LayoutGroup.SetChildAlongAxis(UnityEngine.RectTransform,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Set the position and size of a child layout element along the given axis.</para>
      </summary>
      <param name="rect">The RectTransform of the child layout element.</param>
      <param name="axis">The axis to set the position and size along. 0 is horizontal and 1 is vertical.</param>
      <param name="pos">The position from the left side or top.</param>
      <param name="size">The size.</param>
    </member>
    <member name="M:UnityEngine.UI.LayoutGroup.SetDirty">
      <summary>
        <para>Mark the LayoutGroup as dirty.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.LayoutGroup.SetLayoutHorizontal">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.LayoutGroup.SetLayoutInputForAxis(System.Single,System.Single,System.Single,System.Int32)">
      <summary>
        <para>Used to set the calculated layout properties for the given axis.</para>
      </summary>
      <param name="totalMin">The min size for the layout group.</param>
      <param name="totalPreferred">The preferred size for the layout group.</param>
      <param name="totalFlexible">The flexible size for the layout group.</param>
      <param name="axis">The axis to set sizes for. 0 is horizontal and 1 is vertical.</param>
    </member>
    <member name="M:UnityEngine.UI.LayoutGroup.SetLayoutVertical">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.LayoutGroup.SetProperty(T&amp;,T)">
      <summary>
        <para>Helper method used to set a given property if it has changed.</para>
      </summary>
      <param name="currentValue">A reference to the member value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="T:UnityEngine.UI.LayoutRebuilder">
      <summary>
        <para>Wrapper class for managing layout rebuilding of CanvasElement.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.LayoutRebuilder.transform">
      <summary>
        <para>See [[ICanvasElement]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.LayoutRebuilder.Equals">
      <summary>
        <para>Does the passed rebuilder point to the same CanvasElement.</para>
      </summary>
      <param name="other">Other.</param>
      <returns>
        <para>Equal.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(UnityEngine.RectTransform)">
      <summary>
        <para>Forces an immediate rebuild of the layout element and child layout elements affected by the calculations.</para>
      </summary>
      <param name="layoutRoot">The layout element to perform the layout rebuild on.</param>
    </member>
    <member name="M:UnityEngine.UI.LayoutRebuilder.GraphicUpdateComplete">
      <summary>
        <para>See [[ICanvasElement.GraphicUpdateComplete]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.LayoutRebuilder.IsDestroyed">
      <summary>
        <para>Has the native representation of this LayoutRebuilder been destroyed?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.LayoutRebuilder.LayoutComplete">
      <summary>
        <para>See [[ICanvasElement.LayoutComplete]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.LayoutRebuilder.MarkLayoutForRebuild(UnityEngine.RectTransform)">
      <summary>
        <para>Mark the given [[RectTransform]] as needing it's layout to be recalculated during the next layout pass.</para>
      </summary>
      <param name="rect">Rect to rebuild.</param>
    </member>
    <member name="M:UnityEngine.UI.LayoutRebuilder.Rebuild(UnityEngine.UI.CanvasUpdate)">
      <summary>
        <para>See [[ICanvasElement.Rebuild]].</para>
      </summary>
      <param name="executing"></param>
    </member>
    <member name="T:UnityEngine.UI.LayoutUtility">
      <summary>
        <para>Utility functions for querying layout elements for their minimum, preferred, and flexible sizes.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.LayoutUtility.GetFlexibleHeight(UnityEngine.RectTransform)">
      <summary>
        <para>Returns the flexible height of the layout element.</para>
      </summary>
      <param name="rect">The RectTransform of the layout element to query.</param>
    </member>
    <member name="M:UnityEngine.UI.LayoutUtility.GetFlexibleSize(UnityEngine.RectTransform,System.Int32)">
      <summary>
        <para>Returns the flexible size of the layout element.</para>
      </summary>
      <param name="rect">The RectTransform of the layout element to query.</param>
      <param name="axis">The axis to query. This can be 0 or 1.</param>
    </member>
    <member name="M:UnityEngine.UI.LayoutUtility.GetFlexibleWidth(UnityEngine.RectTransform)">
      <summary>
        <para>Returns the flexible width of the layout element.</para>
      </summary>
      <param name="rect">The RectTransform of the layout element to query.</param>
    </member>
    <member name="M:UnityEngine.UI.LayoutUtility.GetLayoutProperty(UnityEngine.RectTransform,System.Func`2&lt;UnityEngine.UI.ILayoutElement,System.Single&gt;,System.Single)">
      <summary>
        <para>Gets a calculated layout property for the layout element with the given RectTransform.</para>
      </summary>
      <param name="rect">The RectTransform of the layout element to get a property for.</param>
      <param name="property">The property to calculate.</param>
      <param name="defaultValue">The default value to use if no component on the layout element supplies the given property.</param>
      <param name="source">Optional out parameter to get the component that supplied the calculated value.</param>
      <returns>
        <para>The calculated value of the layout property.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.LayoutUtility.GetLayoutProperty(UnityEngine.RectTransform,System.Func`2&lt;UnityEngine.UI.ILayoutElement,System.Single&gt;,System.Single,UnityEngine.UI.ILayoutElement&amp;)">
      <summary>
        <para>Gets a calculated layout property for the layout element with the given RectTransform.</para>
      </summary>
      <param name="rect">The RectTransform of the layout element to get a property for.</param>
      <param name="property">The property to calculate.</param>
      <param name="defaultValue">The default value to use if no component on the layout element supplies the given property.</param>
      <param name="source">Optional out parameter to get the component that supplied the calculated value.</param>
      <returns>
        <para>The calculated value of the layout property.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.LayoutUtility.GetMinHeight(UnityEngine.RectTransform)">
      <summary>
        <para>Returns the minimum height of the layout element.</para>
      </summary>
      <param name="rect">The RectTransform of the layout element to query.</param>
    </member>
    <member name="M:UnityEngine.UI.LayoutUtility.GetMinSize(UnityEngine.RectTransform,System.Int32)">
      <summary>
        <para>Returns the minimum size of the layout element.</para>
      </summary>
      <param name="rect">The RectTransform of the layout element to query.</param>
      <param name="axis">The axis to query. This can be 0 or 1.</param>
    </member>
    <member name="M:UnityEngine.UI.LayoutUtility.GetMinWidth(UnityEngine.RectTransform)">
      <summary>
        <para>Returns the minimum width of the layout element.</para>
      </summary>
      <param name="rect">The RectTransform of the layout element to query.</param>
    </member>
    <member name="M:UnityEngine.UI.LayoutUtility.GetPreferredHeight(UnityEngine.RectTransform)">
      <summary>
        <para>Returns the preferred height of the layout element.</para>
      </summary>
      <param name="rect">The RectTransform of the layout element to query.</param>
    </member>
    <member name="M:UnityEngine.UI.LayoutUtility.GetPreferredSize(UnityEngine.RectTransform,System.Int32)">
      <summary>
        <para>Returns the preferred size of the layout element.</para>
      </summary>
      <param name="rect">The RectTransform of the layout element to query.</param>
      <param name="axis">The axis to query. This can be 0 or 1.</param>
    </member>
    <member name="M:UnityEngine.UI.LayoutUtility.GetPreferredWidth(UnityEngine.RectTransform)">
      <summary>
        <para>Returns the preferred width of the layout element.</para>
      </summary>
      <param name="rect">The RectTransform of the layout element to query.</param>
    </member>
    <member name="T:UnityEngine.UI.Mask">
      <summary>
        <para>A component for masking children elements.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Mask.graphic">
      <summary>
        <para>The graphic associated with the Mask.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Mask.rectTransform">
      <summary>
        <para>Cached [[RectTransform]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Mask.showMaskGraphic">
      <summary>
        <para>Show the graphic that is associated with the Mask render area.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Mask.GetModifiedMaterial(UnityEngine.Material)">
      <summary>
        <para>See: [[IMaterialModifier]].</para>
      </summary>
      <param name="baseMaterial"></param>
    </member>
    <member name="M:UnityEngine.UI.Mask.IsRaycastLocationValid(UnityEngine.Vector2,UnityEngine.Camera)">
      <summary>
        <para>See:[[ICanvasRaycastFilter]].</para>
      </summary>
      <param name="sp"></param>
      <param name="eventCamera"></param>
    </member>
    <member name="M:UnityEngine.UI.Mask.MaskEnabled">
      <summary>
        <para>See:[[IMask]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Mask.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Mask.OnSiblingGraphicEnabledDisabled">
      <summary>
        <para>See:[[IGraphicEnabledDisabled]].</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.MaskableGraphic">
      <summary>
        <para>A [[Graphic]] that is capable of being mased out.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.MaskableGraphic.maskable">
      <summary>
        <para>Does this graphic allow masking.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.MaskableGraphic.onCullStateChanged">
      <summary>
        <para>Callback issued when culling changes.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.MaskableGraphic.Cull(UnityEngine.Rect,System.Boolean)">
      <summary>
        <para>See [[IClippable.Cull]].</para>
      </summary>
      <param name="clipRect"></param>
      <param name="validRect"></param>
    </member>
    <member name="M:UnityEngine.UI.MaskableGraphic.GetModifiedMaterial(UnityEngine.Material)">
      <summary>
        <para>See [[IMaterialModifier.GetModifiedMaterial]].</para>
      </summary>
      <param name="baseMaterial"></param>
    </member>
    <member name="M:UnityEngine.UI.MaskableGraphic.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.MaskableGraphic.ParentMaskStateChanged">
      <summary>
        <para>See: [[IMaskable]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.MaskableGraphic.RecalculateClipping">
      <summary>
        <para>See: [[IClippable.RecalculateClipping]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.MaskableGraphic.RecalculateMasking">
      <summary>
        <para>See: [[IMaskable.RecalculateMasking]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.MaskableGraphic.SetClipRect(UnityEngine.Rect,System.Boolean)">
      <summary>
        <para>See [[IClippable.SetClipRect]].</para>
      </summary>
      <param name="clipRect"></param>
      <param name="validRect"></param>
    </member>
    <member name="T:UnityEngine.UI.MaskUtilities">
      <summary>
        <para>Mask related utility class.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.MaskUtilities.FindRootSortOverrideCanvas(UnityEngine.Transform)">
      <summary>
        <para>Find a root [[Canvas]].</para>
      </summary>
      <param name="start">Search start.</param>
      <returns>
        <para>Canvas transform.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.MaskUtilities.GetRectMaskForClippable(UnityEngine.UI.IClippable)">
      <summary>
        <para>Find the correct [[RectMask2D]] for a given [[IClippable]].</para>
      </summary>
      <param name="transform">Clippable to search from.</param>
    </member>
    <member name="M:UnityEngine.UI.MaskUtilities.GetRectMasksForClip(UnityEngine.UI.RectMask2D,System.Collections.Generic.List`1&lt;UnityEngine.UI.RectMask2D&gt;)">
      <summary>
        <para>Search for all RectMask2D that apply to the given RectMask2D (includes self).</para>
      </summary>
      <param name="clipper"></param>
      <param name="masks"></param>
    </member>
    <member name="M:UnityEngine.UI.MaskUtilities.GetStencilDepth(UnityEngine.Transform,UnityEngine.Transform)">
      <summary>
        <para>Find the stencil depth for a given element.</para>
      </summary>
      <param name="transform"></param>
      <param name="stopAfter"></param>
    </member>
    <member name="M:UnityEngine.UI.MaskUtilities.Notify2DMaskStateChanged(UnityEngine.Component)">
      <summary>
        <para>Notify all IClippables under the given component that they need to recalculate clipping.</para>
      </summary>
      <param name="mask"></param>
    </member>
    <member name="M:UnityEngine.UI.MaskUtilities.NotifyStencilStateChanged(UnityEngine.Component)">
      <summary>
        <para>Notify all IMaskable under the given component that they need to recalculate masking.</para>
      </summary>
      <param name="mask"></param>
    </member>
    <member name="T:UnityEngine.UI.Navigation">
      <summary>
        <para>Structure storing details related to navigation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Navigation.defaultNavigation">
      <summary>
        <para>Return a [[Navigation]] with sensible default values.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Navigation.mode">
      <summary>
        <para>Navitation mode.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Navigation.selectOnDown">
      <summary>
        <para>Selectable to select on down.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Navigation.selectOnLeft">
      <summary>
        <para>Selectable to select on left.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Navigation.selectOnRight">
      <summary>
        <para>Selectable to select on right.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Navigation.selectOnUp">
      <summary>
        <para>Selectable to select on up.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.Navigation.Mode">
      <summary>
        <para>Navigation mode. Used by [[Selectable]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Navigation.Mode.Automatic">
      <summary>
        <para>Automatic navigation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Navigation.Mode.Explicit">
      <summary>
        <para>Explicit navigaion.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Navigation.Mode.Horizontal">
      <summary>
        <para>Horizontal Navigation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Navigation.Mode.None">
      <summary>
        <para>No navigation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Navigation.Mode.Vertical">
      <summary>
        <para>Vertical navigation.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.Outline">
      <summary>
        <para>Adds an outline to a graphic using [[IVertexModifier]].</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.PositionAsUV1">
      <summary>
        <para>An [[IVertexModifier]] which sets the raw vertex position into UV1 of the generated verts.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.RawImage">
      <summary>
        <para>Displays a [[Texture2D]] for the UI System.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.RawImage.mainTexture">
      <summary>
        <para>The RawImage's texture. (ReadOnly).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.RawImage.texture">
      <summary>
        <para>The RawImage's texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.RawImage.uvRect">
      <summary>
        <para>The RawImage texture coordinates.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.RawImage.SetNativeSize">
      <summary>
        <para>Adjusts the raw image size to make it pixel-perfect.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.RectMask2D">
      <summary>
        <para>A 2D rectangular mask that allows for clipping / masking of areas outside the mask.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.RectMask2D.canvasRect">
      <summary>
        <para>Get the [[Rect]] for the mask in canvas space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.RectMask2D.rectTransform">
      <summary>
        <para>Get the [[RectTransform]] for the mask.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.RectMask2D.AddClippable(UnityEngine.UI.IClippable)">
      <summary>
        <para>Add a [IClippable]] to be tracked by the mask.</para>
      </summary>
      <param name="clippable"></param>
    </member>
    <member name="M:UnityEngine.UI.RectMask2D.IsRaycastLocationValid(UnityEngine.Vector2,UnityEngine.Camera)">
      <summary>
        <para>See:[[ICanvasRaycastFilter]].</para>
      </summary>
      <param name="sp"></param>
      <param name="eventCamera"></param>
    </member>
    <member name="M:UnityEngine.UI.RectMask2D.PerformClipping">
      <summary>
        <para>See: [[IClipper.PerformClipping]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.RectMask2D.RemoveClippable(UnityEngine.UI.IClippable)">
      <summary>
        <para>Remove an [[IClippable]] from being tracked by the mask.</para>
      </summary>
      <param name="clippable"></param>
    </member>
    <member name="T:UnityEngine.UI.Scrollbar">
      <summary>
        <para>A standard scrollbar with a variable sized handle that can be dragged between 0 and 1.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Scrollbar.direction">
      <summary>
        <para>The direction of the scrollbar from minimum to maximum value.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Scrollbar.handleRect">
      <summary>
        <para>The RectTransform to use for the handle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Scrollbar.numberOfSteps">
      <summary>
        <para>The number of steps to use for the value. A value of 0 disables use of steps.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Scrollbar.onValueChanged">
      <summary>
        <para>Handling for when the scrollbar value is changed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Scrollbar.size">
      <summary>
        <para>The size of the scrollbar handle where 1 means it fills the entire scrollbar.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Scrollbar.value">
      <summary>
        <para>The current value of the scrollbar, between 0 and 1.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Scrollbar.ClickRepeat(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Coroutine function for handling continual press during ::ref::OnPointerDown.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="T:UnityEngine.UI.Scrollbar.Direction">
      <summary>
        <para>Setting that indicates one of four directions.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Scrollbar.Direction.BottomToTop">
      <summary>
        <para>From bottom to top.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Scrollbar.Direction.LeftToRight">
      <summary>
        <para>From left to right.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Scrollbar.Direction.RightToLeft">
      <summary>
        <para>From right to left.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Scrollbar.Direction.TopToBottom">
      <summary>
        <para>From top to bottom.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Scrollbar.FindSelectableOnDown">
      <summary>
        <para>See member in base class.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Scrollbar.FindSelectableOnLeft">
      <summary>
        <para>See member in base class.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Scrollbar.FindSelectableOnRight">
      <summary>
        <para>See member in base class.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Scrollbar.FindSelectableOnUp">
      <summary>
        <para>See member in base class.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Scrollbar.GraphicUpdateComplete">
      <summary>
        <para>See [[ICanvasElement.GraphicUpdateComplete]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Scrollbar.LayoutComplete">
      <summary>
        <para>See [[ICanvasElement.LayoutComplete]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Scrollbar.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Handling for when the scrollbar value is begin being dragged.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.UI.Scrollbar.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Scrollbar.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Handling for when the scrollbar value is dragged.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.UI.Scrollbar.OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>See: [[IInitializePotentialDragHandler.OnInitializePotentialDrag]].</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.UI.Scrollbar.OnMove(UnityEngine.EventSystems.AxisEventData)">
      <summary>
        <para>Handling for movement events.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.UI.Scrollbar.Rebuild(UnityEngine.UI.CanvasUpdate)">
      <summary>
        <para>Handling for when the canvas is rebuilt.</para>
      </summary>
      <param name="executing"></param>
    </member>
    <member name="T:UnityEngine.UI.Scrollbar.ScrollEvent">
      <summary>
        <para>[[UnityEvent]] callback for when a scrollbar is scrolled.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Scrollbar.SetDirection(UnityEngine.UI.Scrollbar/Direction,System.Boolean)">
      <summary>
        <para>Set the direction of the scrollbar, optionally setting the layout as well.</para>
      </summary>
      <param name="direction">The direction of the scrollbar.</param>
      <param name="includeRectLayouts">Should the layout be flipped together with the direction?</param>
    </member>
    <member name="T:UnityEngine.UI.ScrollRect">
      <summary>
        <para>A component for making a child RectTransform scroll.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.content">
      <summary>
        <para>The content that can be scrolled. It should be a child of the GameObject with ScrollRect on it.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.decelerationRate">
      <summary>
        <para>The rate at which movement slows down.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.elasticity">
      <summary>
        <para>The amount of elasticity to use when the content moves beyond the scroll rect.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.flexibleHeight">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.flexibleWidth">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.horizontal">
      <summary>
        <para>Should horizontal scrolling be enabled?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.horizontalNormalizedPosition">
      <summary>
        <para>The horizontal scroll position as a value between 0 and 1, with 0 being at the left.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.horizontalScrollbar">
      <summary>
        <para>Optional [[Scrollbar]] object linked to the horizontal scrolling of the ScrollRect.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.horizontalScrollbarSpacing">
      <summary>
        <para>The space between the scrollbar and the viewport.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.horizontalScrollbarVisibility">
      <summary>
        <para>The mode of visibility for the horizontal scrollbar.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.inertia">
      <summary>
        <para>Should movement inertia be enabled?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.layoutPriority">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.minHeight">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.minWidth">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.movementType">
      <summary>
        <para>The behavior to use when the content moves beyond the scroll rect.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.normalizedPosition">
      <summary>
        <para>The scroll position as a [[Vector2]] between (0,0) and (1,1) with (0,0) being the lower left corner.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.onValueChanged">
      <summary>
        <para>Callback executed when the scroll position of the slider is changed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.preferredHeight">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.preferredWidth">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.scrollSensitivity">
      <summary>
        <para>The sensitivity to scroll wheel and track pad scroll events.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.velocity">
      <summary>
        <para>The current velocity of the content.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.vertical">
      <summary>
        <para>Should vertical scrolling be enabled?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.verticalNormalizedPosition">
      <summary>
        <para>The vertical scroll position as a value between 0 and 1, with 0 being at the bottom.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.verticalScrollbar">
      <summary>
        <para>Optional [[Scrollbar]] object linked to the vertical scrolling of the ScrollRect.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.verticalScrollbarSpacing">
      <summary>
        <para>The space between the scrollbar and the viewport.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.verticalScrollbarVisibility">
      <summary>
        <para>The mode of visibility for the vertical scrollbar.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ScrollRect.viewport">
      <summary>
        <para>Reference to the viewport RectTransform that is the parent of the content RectTransform.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ScrollRect.CalculateLayoutInputHorizontal">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ScrollRect.CalculateLayoutInputVertical">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ScrollRect.GraphicUpdateComplete">
      <summary>
        <para>See [[ICanvasElement.GraphicUpdateComplete]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ScrollRect.IsActive">
      <summary>
        <para>See member in base class.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ScrollRect.LayoutComplete">
      <summary>
        <para>See [[ICanvasElement.LayoutComplete]].</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.ScrollRect.MovementType">
      <summary>
        <para>A setting for which behavior to use when content moves beyond the confines of its container.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.ScrollRect.MovementType.Clamped">
      <summary>
        <para>Clamped movement. The content can not be moved beyond its container.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.ScrollRect.MovementType.Elastic">
      <summary>
        <para>Elastic movement. The content is allowed to temporarily move beyond the container, but is pulled back elastically.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.ScrollRect.MovementType.Unrestricted">
      <summary>
        <para>Unrestricted movement. The content can move forever.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ScrollRect.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Handling for when the content is beging being dragged.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.UI.ScrollRect.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ScrollRect.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Handling for when the content is dragged.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.UI.ScrollRect.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Handling for when the content has finished being dragged.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.UI.ScrollRect.OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>See: [[IInitializePotentialDragHandler.OnInitializePotentialDrag]].</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.UI.ScrollRect.OnScroll(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>See [[IScrollHandler.OnScroll]].</para>
      </summary>
      <param name="data"></param>
    </member>
    <member name="M:UnityEngine.UI.ScrollRect.Rebuild(UnityEngine.UI.CanvasUpdate)">
      <summary>
        <para>Rebuilds the scroll rect data after initialization.</para>
      </summary>
      <param name="executing">The current step of the rendering CanvasUpdate cycle.</param>
    </member>
    <member name="T:UnityEngine.UI.ScrollRect.ScrollbarVisibility">
      <summary>
        <para>Enum for which behavior to use for scrollbar visibility.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.ScrollRect.ScrollbarVisibility.AutoHide">
      <summary>
        <para>Automatically hide the scrollbar when no scrolling is needed on this axis. The viewport rect will not be changed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.ScrollRect.ScrollbarVisibility.AutoHideAndExpandViewport">
      <summary>
        <para>Automatically hide the scrollbar when no scrolling is needed on this axis, and expand the viewport rect accordingly.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.ScrollRect.ScrollbarVisibility.Permanent">
      <summary>
        <para>Always show the scrollbar.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.ScrollRect.ScrollRectEvent">
      <summary>
        <para>Event type used by the [[ScrollRect]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ScrollRect.SetContentAnchoredPosition(UnityEngine.Vector2)">
      <summary>
        <para>Sets the anchored position of the content.</para>
      </summary>
      <param name="position"></param>
    </member>
    <member name="M:UnityEngine.UI.ScrollRect.SetDirty">
      <summary>
        <para>Override to alter or add to the code that keeps the appearance of the scroll rect synced with its data.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ScrollRect.SetDirtyCaching">
      <summary>
        <para>Override to alter or add to the code that caches data to avoid repeated heavy operations.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ScrollRect.SetLayoutHorizontal">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ScrollRect.SetLayoutVertical">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ScrollRect.StopMovement">
      <summary>
        <para>Sets the velocity to zero on both axes so the content stops moving.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.Selectable">
      <summary>
        <para>Simple selectable object - derived from to create a selectable control.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Selectable.allSelectables">
      <summary>
        <para>List of all the selectable objects currently active in the scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Selectable.animationTriggers">
      <summary>
        <para>The [[AnimationTriggers]] for this selectable object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Selectable.animator">
      <summary>
        <para>Convenience function to get the Animator component on the GameObject.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Selectable.colors">
      <summary>
        <para>The [[ColorBlock]] for this selectable object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Selectable.image">
      <summary>
        <para>Convenience function that converts the referenced Graphic to a Image, if possible.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Selectable.interactable">
      <summary>
        <para>UI.Selectable.interactable.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Selectable.navigation">
      <summary>
        <para>The [[Navigation]] setting for this selectable object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Selectable.spriteState">
      <summary>
        <para>The [[SpriteState]] for this selectable object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Selectable.targetGraphic">
      <summary>
        <para>Graphic that will be transitioned upon.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Selectable.transition">
      <summary>
        <para>The type of transition that will be applied to the targetGraphic when the state changes.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Selectable.DoStateTransition(UnityEngine.UI.Selectable/SelectionState,System.Boolean)">
      <summary>
        <para>Transition the Selectable to the entered state.</para>
      </summary>
      <param name="state">State to transition to.</param>
      <param name="instant">Should the transition occur instantly.</param>
    </member>
    <member name="M:UnityEngine.UI.Selectable.FindSelectable(UnityEngine.Vector3)">
      <summary>
        <para>Finds the selectable object next to this one.</para>
      </summary>
      <param name="dir">The direction in which to search for a neighbouring Selectable object.</param>
      <returns>
        <para>The neighbouring Selectable object. Null if none found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.Selectable.FindSelectableOnDown">
      <summary>
        <para>Find the selectable object below this one.</para>
      </summary>
      <returns>
        <para>The Selectable object below current.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.Selectable.FindSelectableOnLeft">
      <summary>
        <para>Find the selectable object to the left of this one.</para>
      </summary>
      <returns>
        <para>The Selectable object to the left of current.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.Selectable.FindSelectableOnRight">
      <summary>
        <para>Find the selectable object to the right of this one.</para>
      </summary>
      <returns>
        <para>The Selectable object to the right of current.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.Selectable.FindSelectableOnUp">
      <summary>
        <para>Find the selectable object above this one.</para>
      </summary>
      <returns>
        <para>The Selectable object above current.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.Selectable.InstantClearState">
      <summary>
        <para>Clear any internal state from the Selectable (used when disabling).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Selectable.IsHighlighted(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>Is the selectable currently 'highlighted'.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.UI.Selectable.IsInteractable">
      <summary>
        <para>UI.Selectable.IsInteractable.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Selectable.OnDeselect(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>Unset selection and transition to appropriate state.</para>
      </summary>
      <param name="eventData">The eventData usually sent by the EventSystem.</param>
    </member>
    <member name="M:UnityEngine.UI.Selectable.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Selectable.OnMove(UnityEngine.EventSystems.AxisEventData)">
      <summary>
        <para>Determine in which of the 4 move directions the next selectable object should be found.</para>
      </summary>
      <param name="eventData">The EventData usually sent by the EventSystem.</param>
    </member>
    <member name="M:UnityEngine.UI.Selectable.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Evaluate current state and transition to pressed state.</para>
      </summary>
      <param name="eventData">The EventData usually sent by the EventSystem.</param>
    </member>
    <member name="M:UnityEngine.UI.Selectable.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Evaluate current state and transition to appropriate state.</para>
      </summary>
      <param name="eventData">The EventData usually sent by the EventSystem.</param>
    </member>
    <member name="M:UnityEngine.UI.Selectable.OnPointerExit(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Evaluate current state and transition to normal state.</para>
      </summary>
      <param name="eventData">The EventData usually sent by the EventSystem.</param>
    </member>
    <member name="M:UnityEngine.UI.Selectable.OnPointerUp(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Evaluate eventData and transition to appropriate state.</para>
      </summary>
      <param name="eventData">The EventData usually sent by the EventSystem.</param>
    </member>
    <member name="M:UnityEngine.UI.Selectable.OnSelect(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>Set selection and transition to appropriate state.</para>
      </summary>
      <param name="eventData">The EventData usually sent by the EventSystem.</param>
    </member>
    <member name="M:UnityEngine.UI.Selectable.Select">
      <summary>
        <para>Selects this Selectable.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.Selectable.Transition">
      <summary>
        <para>Transition mode for a [[Selectable]].</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Selectable.Transition.Animation">
      <summary>
        <para>Use an animation transition.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Selectable.Transition.ColorTint">
      <summary>
        <para>Use an color tint transition.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Selectable.Transition.None">
      <summary>
        <para>No Transition.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Selectable.Transition.SpriteSwap">
      <summary>
        <para>Use a sprite swap transition.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Selectable.UpdateSelectionState(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>Internally update the selection state of the Selectable.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="T:UnityEngine.UI.Shadow">
      <summary>
        <para>Adds an outline to a graphic using [[IVertexModifier]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Shadow.effectColor">
      <summary>
        <para>Color for the effect.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Shadow.effectDistance">
      <summary>
        <para>How far is the shadow from the graphic.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Shadow.useGraphicAlpha">
      <summary>
        <para>Should the shadow inherit the alpha from the graphic?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Shadow.ApplyShadow(System.Collections.Generic.List`1&lt;UnityEngine.UIVertex&gt;,UnityEngine.Color32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Duplicate vertices from start to end and turn them into shadows with the given offset.</para>
      </summary>
      <param name="verts">Verts List.</param>
      <param name="color">Shadow Color.</param>
      <param name="start">Start Index.</param>
      <param name="end">End Index.</param>
      <param name="x">Shadow x offset.</param>
      <param name="y">Shadow y offset.</param>
    </member>
    <member name="M:UnityEngine.UI.Shadow.ModifyMesh">
      <summary>
        <para>See: [[IMeshModifier]].</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.Slider">
      <summary>
        <para>A standard slider that can be moved between a minimum and maximum value.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Slider.direction">
      <summary>
        <para>The direction of the slider, from minimum to maximum value.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Slider.fillRect">
      <summary>
        <para>Optional RectTransform to use as fill for the slider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Slider.handleRect">
      <summary>
        <para>Optional RectTransform to use as a handle for the slider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Slider.maxValue">
      <summary>
        <para>The maximum allowed value of the slider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Slider.minValue">
      <summary>
        <para>The minimum allowed value of the slider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Slider.normalizedValue">
      <summary>
        <para>The current value of the slider normalized into a value between 0 and 1.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Slider.onValueChanged">
      <summary>
        <para>Callback executed when the value of the slider is changed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Slider.value">
      <summary>
        <para>The current value of the slider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Slider.wholeNumbers">
      <summary>
        <para>Should the value only be allowed to be whole numbers?</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.Slider.Direction">
      <summary>
        <para>Setting that indicates one of four directions.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Slider.Direction.BottomToTop">
      <summary>
        <para>From bottom to top.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Slider.Direction.LeftToRight">
      <summary>
        <para>From left to right.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Slider.Direction.RightToLeft">
      <summary>
        <para>From right to left.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Slider.Direction.TopToBottom">
      <summary>
        <para>From top to bottom.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Slider.FindSelectableOnDown">
      <summary>
        <para>See member in base class.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Slider.FindSelectableOnLeft">
      <summary>
        <para>See member in base class.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Slider.FindSelectableOnRight">
      <summary>
        <para>See member in base class.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Slider.FindSelectableOnUp">
      <summary>
        <para>See member in base class.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Slider.GraphicUpdateComplete">
      <summary>
        <para>See [[ICanvasElement.GraphicUpdateComplete]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Slider.LayoutComplete">
      <summary>
        <para>See [[ICanvasElement.LayoutComplete]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Slider.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Slider.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Handling for when the slider is dragged.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.UI.Slider.OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>See: [[IInitializePotentialDragHandler.OnInitializePotentialDrag]].</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.UI.Slider.OnMove(UnityEngine.EventSystems.AxisEventData)">
      <summary>
        <para>Handling for movement events.</para>
      </summary>
      <param name="eventData"></param>
    </member>
    <member name="M:UnityEngine.UI.Slider.Rebuild(UnityEngine.UI.CanvasUpdate)">
      <summary>
        <para>Handling for when the canvas is rebuilt.</para>
      </summary>
      <param name="executing"></param>
    </member>
    <member name="M:UnityEngine.UI.Slider.Set(System.Single,System.Boolean)">
      <summary>
        <para>Set the value of the slider.</para>
      </summary>
      <param name="input">The new value for the slider.</param>
      <param name="sendCallback">If the OnValueChanged callback should be invoked.</param>
    </member>
    <member name="M:UnityEngine.UI.Slider.SetDirection(UnityEngine.UI.Slider/Direction,System.Boolean)">
      <summary>
        <para>Sets the direction of this slider, optionally changing the layout as well.</para>
      </summary>
      <param name="direction">The direction of the slider.</param>
      <param name="includeRectLayouts">Should the layout be flipped together with the slider direction?</param>
    </member>
    <member name="T:UnityEngine.UI.Slider.SliderEvent">
      <summary>
        <para>Event type used by the [[Slider]].</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.SpriteState">
      <summary>
        <para>Structure to store the state of a sprite transition on a [[Selectable]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.SpriteState.disabledSprite">
      <summary>
        <para>Disabled sprite.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.SpriteState.highlightedSprite">
      <summary>
        <para>Highlighted sprite.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.SpriteState.pressedSprite">
      <summary>
        <para>Pressed sprite.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.Text">
      <summary>
        <para>The default [[Graphic]] to draw font data to screen.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.alignment">
      <summary>
        <para>The positioning of the text reliative to its [[RectTransform]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.cachedTextGenerator">
      <summary>
        <para>The cached [[TextGenerator]] used when generating visible [[Text]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.cachedTextGeneratorForLayout">
      <summary>
        <para>The cached [[TextGenerator]] used when determine [[Layout]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.flexibleHeight">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.flexibleWidth">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.font">
      <summary>
        <para>The [[Font]] used by the text.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.fontSize">
      <summary>
        <para>The size that the [[Font]] should render at.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.fontStyle">
      <summary>
        <para>[[FontStyle]] used by the text.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.horizontalOverflow">
      <summary>
        <para>Horizontal overflow mode.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.layoutPriority">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.lineSpacing">
      <summary>
        <para>Line spacing, specified as a factor of font line height. A value of 1 will produce normal line spacing.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.mainTexture">
      <summary>
        <para>The [[Texture]] that comes from the [[Font]].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.minHeight">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.minWidth">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.pixelsPerUnit">
      <summary>
        <para>(RO) Provides information about how fonts are scale to the screen.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.preferredHeight">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.preferredWidth">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.resizeTextForBestFit">
      <summary>
        <para>Should the text be allowed to auto resized.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.resizeTextMaxSize">
      <summary>
        <para>The maximum size the text is allowed to be. 1 = infinitly large.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.resizeTextMinSize">
      <summary>
        <para>The minimum size the text is allowed to be.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.supportRichText">
      <summary>
        <para>Whether this Text will support rich text.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.text">
      <summary>
        <para>The string value this text will display.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Text.verticalOverflow">
      <summary>
        <para>Vertical overflow mode.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Text.CalculateLayoutInputHorizontal">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Text.CalculateLayoutInputVertical">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Text.FontTextureChanged">
      <summary>
        <para>Called by the [FontUpdateTracker] when the texture associated with a font is modified.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Text.GetGenerationSettings(UnityEngine.Vector2)">
      <summary>
        <para>Convenience function to populate the generation setting for the text.</para>
      </summary>
      <param name="extents">The extents the text can draw in.</param>
      <returns>
        <para>Generated settings.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.Text.GetTextAnchorPivot(UnityEngine.TextAnchor)">
      <summary>
        <para>Convenience function to determine the vector offset of the anchor.</para>
      </summary>
      <param name="anchor"></param>
    </member>
    <member name="M:UnityEngine.UI.Text.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.Toggle">
      <summary>
        <para>A standard toggle that has an on / off state.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Toggle.graphic">
      <summary>
        <para>Graphic affected by the toggle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Toggle.group">
      <summary>
        <para>Group the toggle belongs to.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.Toggle.isOn">
      <summary>
        <para>Is the toggle on.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Toggle.onValueChanged">
      <summary>
        <para>Callback executed when the value of the toggle is changed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Toggle.toggleTransition">
      <summary>
        <para>Transition mode for the toggle.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Toggle.GraphicUpdateComplete">
      <summary>
        <para>See [[ICanvasElement.GraphicUpdateComplete]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Toggle.LayoutComplete">
      <summary>
        <para>See [[ICanvasElement.LayoutComplete]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Toggle.OnDisable">
      <summary>
        <para>See [[MonoBehaviour.OnDisable]].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.Toggle.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
      <summary>
        <para>Handling for when the toggle is 'clicked'.</para>
      </summary>
      <param name="eventData">Current event.</param>
    </member>
    <member name="M:UnityEngine.UI.Toggle.OnSubmit(UnityEngine.EventSystems.BaseEventData)">
      <summary>
        <para>Handling for when the submit key is pressed.</para>
      </summary>
      <param name="eventData">Current event.</param>
    </member>
    <member name="M:UnityEngine.UI.Toggle.Rebuild(UnityEngine.UI.CanvasUpdate)">
      <summary>
        <para>Handling for when the canvas is rebuilt.</para>
      </summary>
      <param name="executing"></param>
    </member>
    <member name="T:UnityEngine.UI.Toggle.ToggleEvent">
      <summary>
        <para>[[UnityEvent]] callback for when a toggle is toggled.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.Toggle.ToggleTransition">
      <summary>
        <para>Display settings for when a toggle is activated or deactivated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Toggle.ToggleTransition.Fade">
      <summary>
        <para>Fade the toggle in / out.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UI.Toggle.ToggleTransition.None">
      <summary>
        <para>Show / hide the toggle instantly.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UI.ToggleGroup">
      <summary>
        <para>A component that represents a group of [[Toggle]]s.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.ToggleGroup.allowSwitchOff">
      <summary>
        <para>Is it allowed that no toggle is switched on?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ToggleGroup.ActiveToggles">
      <summary>
        <para>Returns the toggles in this group that are active.</para>
      </summary>
      <returns>
        <para>The active toggles in the group.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.UI.ToggleGroup.AnyTogglesOn">
      <summary>
        <para>Are any of the toggles on?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ToggleGroup.NotifyToggleOn(UnityEngine.UI.Toggle)">
      <summary>
        <para>Notify the group that the given toggle is enabled.</para>
      </summary>
      <param name="toggle"></param>
    </member>
    <member name="M:UnityEngine.UI.ToggleGroup.RegisterToggle(UnityEngine.UI.Toggle)">
      <summary>
        <para>Register a toggle with the group.</para>
      </summary>
      <param name="toggle">To register.</param>
    </member>
    <member name="M:UnityEngine.UI.ToggleGroup.SetAllTogglesOff">
      <summary>
        <para>Switch all toggles off.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.ToggleGroup.UnregisterToggle(UnityEngine.UI.Toggle)">
      <summary>
        <para>Toggle to unregister.</para>
      </summary>
      <param name="toggle">Unregister toggle.</param>
    </member>
    <member name="T:UnityEngine.UI.VertexHelper">
      <summary>
        <para>A utility class that can aid in the generation of meshes for the UI.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.VertexHelper.currentIndexCount">
      <summary>
        <para>Get the number of indices set on the VertexHelper.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UI.VertexHelper.currentVertCount">
      <summary>
        <para>Current number of vertices in the buffer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.VertexHelper.AddTriangle(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Add a triangle to the buffer.</para>
      </summary>
      <param name="idx0">Index 0.</param>
      <param name="idx1">Index 1.</param>
      <param name="idx2">Index 2.</param>
    </member>
    <member name="M:UnityEngine.UI.VertexHelper.AddUIVertexQuad(UnityEngine.UIVertex[])">
      <summary>
        <para>Add a quad to the stream.</para>
      </summary>
      <param name="verts">4 Vertices representing the quad.</param>
    </member>
    <member name="M:UnityEngine.UI.VertexHelper.AddUIVertexTriangleStream(System.Collections.Generic.List`1&lt;UnityEngine.UIVertex&gt;)">
      <summary>
        <para>Add a list of triangles to the stream.</para>
      </summary>
      <param name="verts">Vertices to add. Length should be divisible by 3.</param>
    </member>
    <member name="M:UnityEngine.UI.VertexHelper.AddVert(UnityEngine.Vector3,UnityEngine.Color32,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Vector4)">
      <summary>
        <para>Add a single vertex to the stream.</para>
      </summary>
      <param name="position"></param>
      <param name="color"></param>
      <param name="uv0"></param>
      <param name="uv1"></param>
      <param name="normal"></param>
      <param name="tangent"></param>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UI.VertexHelper.AddVert(UnityEngine.Vector3,UnityEngine.Color32,UnityEngine.Vector2)">
      <summary>
        <para>Add a single vertex to the stream.</para>
      </summary>
      <param name="position"></param>
      <param name="color"></param>
      <param name="uv0"></param>
      <param name="uv1"></param>
      <param name="normal"></param>
      <param name="tangent"></param>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UI.VertexHelper.AddVert(UnityEngine.UIVertex)">
      <summary>
        <para>Add a single vertex to the stream.</para>
      </summary>
      <param name="position"></param>
      <param name="color"></param>
      <param name="uv0"></param>
      <param name="uv1"></param>
      <param name="normal"></param>
      <param name="tangent"></param>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.UI.VertexHelper.Clear">
      <summary>
        <para>Clear all vertices from the stream.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.VertexHelper.Dispose">
      <summary>
        <para>Cleanup allocated memory.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.VertexHelper.FillMesh(UnityEngine.Mesh)">
      <summary>
        <para>Fill the given mesh with the stream data.</para>
      </summary>
      <param name="mesh"></param>
    </member>
    <member name="M:UnityEngine.UI.VertexHelper.GetUIVertexStream(System.Collections.Generic.List`1&lt;UnityEngine.UIVertex&gt;)">
      <summary>
        <para>Create a stream of UI vertex (in triangles) from the stream.</para>
      </summary>
      <param name="stream"></param>
    </member>
    <member name="M:UnityEngine.UI.VertexHelper.PopulateUIVertex(UnityEngine.UIVertex&amp;,System.Int32)">
      <summary>
        <para>Fill a [[UIVertex]] with data from index i of the stream.</para>
      </summary>
      <param name="vertex">Vertex to populate.</param>
      <param name="i">Index to populate from.</param>
    </member>
    <member name="M:UnityEngine.UI.VertexHelper.SetUIVertex(UnityEngine.UIVertex,System.Int32)">
      <summary>
        <para>Set a [[UIVertex]] at the given index.</para>
      </summary>
      <param name="vertex"></param>
      <param name="i"></param>
    </member>
    <member name="T:UnityEngine.UI.VerticalLayoutGroup">
      <summary>
        <para>Layout child layout elements below each other.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.VerticalLayoutGroup.CalculateLayoutInputHorizontal">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.VerticalLayoutGroup.CalculateLayoutInputVertical">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.VerticalLayoutGroup.SetLayoutHorizontal">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UI.VerticalLayoutGroup.SetLayoutVertical">
      <summary>
        <para>Called by the layout system.</para>
      </summary>
    </member>
  </members>
</doc>
